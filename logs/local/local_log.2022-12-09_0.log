INFO  22-12-09 13:41:36[restartedMain] [HelloWorldSpringBootApplication:55] - Starting HelloWorldSpringBootApplication using Java 17.0.3 on 황수연 with PID 3240 (C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main started by user in C:\Users\user\IdeaProjects\HelloWorld-SpringBoot)
DEBUG 22-12-09 13:41:36[restartedMain] [HelloWorldSpringBootApplication:56] - Running with Spring Boot v2.7.5, Spring v5.3.23
INFO  22-12-09 13:41:36[restartedMain] [HelloWorldSpringBootApplication:640] - The following 1 profile is active: "local"
DEBUG 22-12-09 13:41:36[restartedMain] [SpringApplication:667] - Loading source class com.example.HelloWorldSpringBootApplication
DEBUG 22-12-09 13:41:36[restartedMain] [ChangeableUrls:252] - Matching URLs for reloading : [file:/C:/Users/user/IdeaProjects/HelloWorld-SpringBoot/build/classes/java/main/, file:/C:/Users/user/IdeaProjects/HelloWorld-SpringBoot/build/resources/main/]
DEBUG 22-12-09 13:41:36[restartedMain] [DevToolsSettings:252] - Included patterns for restart : []
DEBUG 22-12-09 13:41:36[restartedMain] [DevToolsSettings:252] - Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
INFO  22-12-09 13:41:36[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  22-12-09 13:41:36[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
DEBUG 22-12-09 13:41:36[restartedMain] [AnnotationConfigServletWebServerApplicationContext:629] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741
DEBUG 22-12-09 13:41:37[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG 22-12-09 13:41:37[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\database\controller\JpaRestController.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\database\service\MemberService.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\jasypt\JasyptConfig.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\jwt\JwtProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\kafka\KafkaConsumer.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\kafka\KafkaProducer.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\kafka\controller\KafkaController.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\netty\server\NettyController.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\quartz\TestJobA.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\quartz\config\JobConfig.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\schedule\TestScheduler.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\swagger\SwaggerConfig.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\web\config\ContainerConfig.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\web\controller\CustomErrorController.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\web\controller\ExceptionController.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\web\controller\HelloController.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\web\controller\TokenController.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\web\service\TestService.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/ServiceModelToSwagger2MapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/VendorExtensionsMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/PropertyMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/CompatibilityModelMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/ParameterMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/ModelMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/RequestParameterMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/ModelSpecificationMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/LicenseMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/mappers/SecurityMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger2/3.0.0/7bcb18d496576eff76ef7bb72684e149cbb75c1d/springfox-swagger2-3.0.0.jar!/springfox/documentation/swagger2/web/Swagger2ControllerWebMvc.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/schema/OpenApiSchemaPropertyBuilder.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/schema/ApiModelPropertyPropertyBuilder.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/schema/ApiModelTypeNameProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/schema/ApiModelBuilder.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationImplicitParameterReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/VendorExtensionsReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/SwaggerOperationResponseClassReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/SwaggerOperationModelsProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OpenApiOperationAuthReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/SwaggerMediaTypeReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationHttpMethodReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationImplicitParametersReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationAuthReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationHiddenReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationSummaryReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OpenApiOperationTagsReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/SwaggerResponseMessageReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationNicknameIntoUniqueIdReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationPositionReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OpenApiResponseReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/OperationNotesReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/operation/SwaggerOperationTagsReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/parameter/ApiParamParameterBuilder.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/parameter/SwaggerExpandedParameterBuilder.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/readers/parameter/OpenApiParameterBuilder.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/web/SwaggerApiListingReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/web/InMemorySwaggerResourcesProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-swagger-common/3.0.0/2e2fae840984cfcabfd50e1b4b1c23422135ba12/springfox-swagger-common-3.0.0.jar!/springfox/documentation/swagger/web/ApiResourceController.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/ApiListingReferenceScanner.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/ApiDocumentationScanner.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/ApiDescriptionReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/ApiListingReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/ApiModelSpecificationReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/CachingOperationReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/MediaTypeReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/ApiListingScanner.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/ApiModelReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/scanners/ApiDescriptionLookup.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/OperationModelsProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/OperationDeprecatedReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/ResponseMessagesReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/OperationParameterReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/OperationTagsReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/ApiOperationReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/DefaultOperationReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/OperationParameterRequestConditionReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/OperationParameterHeadersConditionReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/ContentParameterAggregator.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/OperationResponseClassReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/operation/CachingOperationNameGenerator.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/parameter/ParameterMultiplesReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/parameter/ModelAttributeParameterExpander.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/parameter/ParameterTypeReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/parameter/ParameterRequiredReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/parameter/ParameterDataTypeReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/parameter/ParameterDefaultReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/parameter/ParameterNameReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/readers/parameter/ExpandedParameterBuilder.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-webmvc/3.0.0/7ed22363fdfd651cd811c0b2391f16bddb91db8b/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DefaultResponseTypeReader.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsManager.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/paths/QueryStringUriTemplateDecorator.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/paths/PathMappingDecorator.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/paths/PathSanitizer.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-spring-web/3.0.0/a76f2fbe805bfd2798e20dc8f2cfbfad554d52da/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/paths/OperationPathDecorator.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/JacksonJsonViewProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/CachingModelDependencyProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/TypeNameExtractor.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/plugins/PropertyDiscriminatorBasedInheritancePlugin.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/plugins/XmlModelPlugin.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/plugins/SchemaPluginsManager.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/plugins/JsonIgnorePropertiesModelPlugin.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/property/CachingModelPropertiesProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/property/ObjectMapperBeanPropertyNamingStrategy.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/property/bean/AccessorsProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/property/field/FieldProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/property/XmlPropertyPlugin.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/property/OptimizedModelPropertiesProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/property/FactoryMethodProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/property/ModelSpecificationFactory.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/CachingModelProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/DefaultModelDependencyProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/JacksonEnumTypeDeterminer.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/DefaultModelProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-schema/3.0.0/32c5d6965617830ef6480fadb9030008945bcd9c/springfox-schema-3.0.0.jar!/springfox/documentation/schema/DefaultModelSpecificationProvider.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/web/OpenApiControllerWebMvc.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/mappers/OasVendorExtensionsMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/mappers/StyleEnumMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/mappers/SecuritySchemeMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/mappers/OasSecurityMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/mappers/SchemaMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/mappers/ExamplesMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/mappers/ServiceModelToOpenApiMapperImpl.class]
DEBUG 22-12-09 13:41:37[restartedMain] [ClassPathBeanDefinitionScanner:435] - Identified candidate component class: URL [jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/io.springfox/springfox-oas/3.0.0/e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b/springfox-oas-3.0.0.jar!/springfox/documentation/oas/mappers/OasLicenceMapper.class]
INFO  22-12-09 13:41:38[restartedMain] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  22-12-09 13:41:38[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
DEBUG 22-12-09 13:41:38[restartedMain] [AutoConfigurationPackages:196] - @EnableAutoConfiguration was declared on a class in the package 'com.example'. Automatic @Repository and @Entity scanning is enabled.
DEBUG 22-12-09 13:41:38[restartedMain] [RepositoryConfigurationDelegate:145] - Scanning for JDBC repositories in packages com.example.
DEBUG 22-12-09 13:41:38[restartedMain] [RepositoryComponentProvider:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\database\repository\MemberRepository.class]
INFO  22-12-09 13:41:38[restartedMain] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.database.repository.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  22-12-09 13:41:38[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 66 ms. Found 0 JDBC repository interfaces.
INFO  22-12-09 13:41:38[restartedMain] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  22-12-09 13:41:38[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
DEBUG 22-12-09 13:41:38[restartedMain] [RepositoryConfigurationDelegate:145] - Scanning for JPA repositories in packages com.example.
DEBUG 22-12-09 13:41:38[restartedMain] [RepositoryComponentProvider:435] - Identified candidate component class: file [C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main\com\example\database\repository\MemberRepository.class]
INFO  22-12-09 13:41:38[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 1 JPA repository interfaces.
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'enableEncryptablePropertySourcesPostProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'encryptablePropertySourceConverter'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'lazyEncryptablePropertyResolver'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'com.ulisesbocchio.jasyptspringboot.configuration.EncryptablePropertyResolverConfiguration'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'lazyEncryptablePropertyDetector'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'envCopy'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'envCopy' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyDetector' via factory method to bean named 'envCopy'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyDetector' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76cc2041'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'lazyJasyptStringEncryptor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyJasyptStringEncryptor' via factory method to bean named 'envCopy'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyJasyptStringEncryptor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76cc2041'
DEBUG 22-12-09 13:41:38[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'jasypt.encryptor.bean' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyResolver' via factory method to bean named 'lazyEncryptablePropertyDetector'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyResolver' via factory method to bean named 'lazyJasyptStringEncryptor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76cc2041'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyResolver' via factory method to bean named 'envCopy'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyResolver' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'lazyEncryptablePropertyFilter'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyFilter' via factory method to bean named 'envCopy'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lazyEncryptablePropertyFilter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76cc2041'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'encryptablePropertySourceConverter' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'encryptablePropertySourceConverter' via factory method to bean named 'lazyEncryptablePropertyResolver'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'encryptablePropertySourceConverter' via factory method to bean named 'lazyEncryptablePropertyFilter'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'enableEncryptablePropertySourcesPostProcessor' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'enableEncryptablePropertySourcesPostProcessor' via factory method to bean named 'encryptablePropertySourceConverter'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
INFO  22-12-09 13:41:38[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:40] - Post-processing PropertySource instances
INFO  22-12-09 13:41:38[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  22-12-09 13:41:38[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:41:38[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:41:38[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:41:38[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  22-12-09 13:41:38[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  22-12-09 13:41:38[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:41:38[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DEBUG 22-12-09 13:41:38[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webMvcObjectMapperConfigurer'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionAttributeSource'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionInterceptor'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
DEBUG 22-12-09 13:41:39[restartedMain] [UiApplicationContextUtils:85] - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@53ed3878]
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'servletContainer'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'containerConfig'
INFO  22-12-09 13:41:39[restartedMain] [DefaultLazyPropertyFilter:31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  22-12-09 13:41:39[restartedMain] [DefaultLazyPropertyResolver:35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  22-12-09 13:41:39[restartedMain] [DefaultLazyPropertyDetector:35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
DEBUG 22-12-09 13:41:39[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'tomcat.ajp.protocol' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:39[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'tomcat.ajp.port' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:39[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'tomcat.ajp.address' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:39[restartedMain] [ConfigurationPropertySourcesPropertyResolver$DefaultResolver:115] - Found key 'tomcat.ajp.allowedRequestAttributesPattern' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
DEBUG 22-12-09 13:41:39[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'tomcat.ajp.allowedRequestAttributesPattern' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:39[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'server.port.http' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:39[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'server.port' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'errorPageCustomizer'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dispatcherServletRegistration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dispatcherServlet'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'multipartConfigElement'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
DEBUG 22-12-09 13:41:39[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
DEBUG 22-12-09 13:41:39[restartedMain] [ContainerConfig$1:81] - Code archive: C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot\2.7.5\fd04e228e6e21b7ad13c10ae29afd31868d842e5\spring-boot-2.7.5.jar
DEBUG 22-12-09 13:41:39[restartedMain] [ContainerConfig$1:125] - Code archive: C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot\2.7.5\fd04e228e6e21b7ad13c10ae29afd31868d842e5\spring-boot-2.7.5.jar
DEBUG 22-12-09 13:41:39[restartedMain] [ContainerConfig$1:69] - Document root: C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\src\main\webapp
INFO  22-12-09 13:41:39[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8443 (https) 8009 (http) 8080 (http)
INFO  22-12-09 13:41:39[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["https-jsse-nio-8443"]
INFO  22-12-09 13:41:39[restartedMain] [AjpNioProtocol:173] - Initializing ProtocolHandler ["ajp-nio-0.0.0.0-8009"]
INFO  22-12-09 13:41:39[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-12-09 13:41:39[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-12-09 13:41:39[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
INFO  22-12-09 13:41:40[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  22-12-09 13:41:40[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
DEBUG 22-12-09 13:41:40[restartedMain] [ServletWebServerApplicationContext:286] - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
INFO  22-12-09 13:41:40[restartedMain] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 3179 ms
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'h2Console'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataSource'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jasyptStringEncryptor'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jasyptConfig'
INFO  22-12-09 13:41:40[restartedMain] [DefaultLazyEncryptor:32] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@55de25a0 with name: jasyptStringEncryptor
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:971] - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@4e25154f
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1103] - HikariPool-1 - configuration:
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - allowPoolSuspension................................false
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - autoCommit................................true
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - catalog................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - connectionInitSql................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - connectionTestQuery................................"SELECT 1"
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - connectionTimeout................................30000
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - dataSource................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - dataSourceClassName................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - dataSourceJNDI................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - dataSourceProperties................................{password=<masked>}
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - driverClassName................................"org.h2.Driver"
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - exceptionOverrideClassName................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - healthCheckProperties................................{}
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - healthCheckRegistry................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - idleTimeout................................600000
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - initializationFailTimeout................................1
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - isolateInternalQueries................................false
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - jdbcUrl................................jdbc:h2:mem:test
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - keepaliveTime................................0
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - leakDetectionThreshold................................0
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - maxLifetime................................1800000
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - maximumPoolSize................................10
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - metricRegistry................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - metricsTrackerFactory................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - minimumIdle................................10
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - password................................<masked>
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - poolName................................"HikariPool-1"
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - readOnly................................false
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - registerMbeans................................false
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - scheduledExecutor................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - schema................................none
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - threadFactory................................internal
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - transactionIsolation................................default
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - username................................"username"
DEBUG 22-12-09 13:41:40[restartedMain] [HikariConfig:1135] - validationTimeout................................5000
INFO  22-12-09 13:41:40[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - log4jdbc-logj2 properties initialization...
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - Using logger: net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.debug.stack.prefix is not defined
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.sqltiming.warn.threshold is not defined
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.sqltiming.error.threshold is not defined
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.dump.booleanastruefalse is not defined (using default value false)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] -   log4jdbc.dump.sql.maxlinelength = 0
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.dump.fulldebugstacktrace is not defined (using default value false)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.statement.warn is not defined (using default value false)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.dump.sql.select is not defined (using default value true)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.dump.sql.insert is not defined (using default value true)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.dump.sql.update is not defined (using default value true)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.dump.sql.delete is not defined (using default value true)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.dump.sql.create is not defined (using default value true)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.dump.sql.addsemicolon is not defined (using default value false)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.auto.load.popular.drivers is not defined (using default value true)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.drivers is not defined
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.trim.sql is not defined (using default value true)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.trim.sql.extrablanklines is not defined (using default value true)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - x log4jdbc.suppress.generated.keys.exception is not defined (using default value false)
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - log4jdbc-logj2 properties initialization done.
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - DriverSpy intialization...
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] -   FOUND DRIVER org.h2.Driver
DEBUG 22-12-09 13:41:40[restartedMain] [debug:515] - DriverSpy intialization done.
DEBUG 22-12-09 13:41:40[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=USERNAME
INFO  22-12-09 13:41:40[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-12-09 13:41:40[restartedMain] [H2ConsoleAutoConfiguration:98] - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestContextFilter'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'formContentFilter'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'characterEncodingFilter'
DEBUG 22-12-09 13:41:40[restartedMain] [ServletContextInitializerBeans:236] - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
DEBUG 22-12-09 13:41:40[restartedMain] [ServletContextInitializerBeans:236] - Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
DEBUG 22-12-09 13:41:40[restartedMain] [OrderedRequestContextFilter:242] - Filter 'requestContextFilter' configured for use
DEBUG 22-12-09 13:41:40[restartedMain] [OrderedCharacterEncodingFilter:242] - Filter 'characterEncodingFilter' configured for use
DEBUG 22-12-09 13:41:40[restartedMain] [OrderedFormContentFilter:242] - Filter 'formContentFilter' configured for use
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'entityManagerFactory'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76cc2041'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpaVendorAdapter'
DEBUG 22-12-09 13:41:40[HikariPool-1 housekeeper] [HikariPool:421] - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:729] - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:test user=USERNAME
DEBUG 22-12-09 13:41:40[HikariPool-1 connection adder] [HikariPool:421] - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
DEBUG 22-12-09 13:41:40[restartedMain] [logging:152] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
DEBUG 22-12-09 13:41:40[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
DEBUG 22-12-09 13:41:40[restartedMain] [LocalContainerEntityManagerFactoryBean:361] - Building JPA container EntityManagerFactory for persistence unit 'default'
DEBUG 22-12-09 13:41:40[restartedMain] [LogHelper:102] - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5d5a1d0d
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/user/IdeaProjects/HelloWorld-SpringBoot/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.database.vo.MemberVo]
	Mapping files names []
	Properties []
DEBUG 22-12-09 13:41:40[restartedMain] [IntegratorServiceImpl:46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG 22-12-09 13:41:40[restartedMain] [IntegratorServiceImpl:46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG 22-12-09 13:41:40[restartedMain] [IntegratorServiceImpl:46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  22-12-09 13:41:40[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.6.12.Final
DEBUG 22-12-09 13:41:40[restartedMain] [Environment:199] - HHH000206: hibernate.properties not found
DEBUG 22-12-09 13:41:41[restartedMain] [ServiceBinding:68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG 22-12-09 13:41:41[restartedMain] [RegionFactoryInitiator:118] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
DEBUG 22-12-09 13:41:41[restartedMain] [RegionFactoryInitiator:49] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO  22-12-09 13:41:41[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@2aba076b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@2aba076b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2aba076b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2db0f5e5
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@59e1a9ba
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@15783af3
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@44ce45ac
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@44ce45ac
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@44ce45ac
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@6644451b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@6644451b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6644451b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@2e77b43
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@2e77b43
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2e77b43
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@756da4d9
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@756da4d9
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@756da4d9
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@33af3b5b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@33af3b5b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@33af3b5b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@66fa14f6
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@66fa14f6
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@66fa14f6
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@1db27b65
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@1db27b65
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1db27b65
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5726e169
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5726e169
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17af9ddf
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17af9ddf
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@71c89d29
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@71c89d29
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@322f32a8
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d3971fa
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@15ad2286
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@15ad2286
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@ce4818e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@ce4818e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@396c811e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@396c811e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79990117
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79990117
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@140c3a8e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@140c3a8e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f86760c
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f86760c
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3bfd8b0a
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3bfd8b0a
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e97657f
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e97657f
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@227833c9
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@227833c9
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@4a2910be
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4a2910be
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@5a0c747c
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a0c747c
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c5ead95
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c5ead95
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c5ead95
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7fb17b81
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@74a8cb86
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@74a8cb86
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@74a8cb86
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3cf48ab9
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@64c45386
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@46a79b76
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@46a79b76
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@556037e3
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@556037e3
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70cfd65e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70cfd65e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@3635b927
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3635b927
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f74365a
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f74365a
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4e438777
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@339672ac
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@339672ac
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@339672ac
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@545781a1
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@545781a1
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@545781a1
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@3238ed62
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@45fc6c20
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@6ef2adb2
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@6ef2adb2
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@6ef2adb2
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52c8c7f7
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52c8c7f7
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52c8c7f7
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@10bfa12e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@1d404106
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@1dff2eee
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1dff2eee
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f83985
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@37d7fdde
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@37d7fdde
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@1bd40737
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bd40737
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@103e995e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@447b039f
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@7e62b25e
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@13f7549
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@13f7549
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2a27c842
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67f63b00
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@345081ef
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@275a8cd8
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@332b35a9
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@65d326f7
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55bc9c5b
DEBUG 22-12-09 13:41:41[restartedMain] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2673f678
DEBUG 22-12-09 13:41:41[restartedMain] [BootstrapContextImpl:259] - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@586aef3e] into BootstrapContext; was [null]
DEBUG 22-12-09 13:41:41[restartedMain] [ClassLoaderAccessImpl:45] - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@586aef3e) [was null]
DEBUG 22-12-09 13:41:41[restartedMain] [BootstrapContextImpl:269] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4155233b] into BootstrapContext; was [null]
DEBUG 22-12-09 13:41:41[restartedMain] [BootstrapContextImpl:264] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7de06639] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4d23f739]
DEBUG 22-12-09 13:41:41[restartedMain] [BootstrapContextImpl:259] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@586aef3e]
DEBUG 22-12-09 13:41:41[restartedMain] [ClassLoaderAccessImpl:45] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@586aef3e]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [DefaultIdentifierGeneratorFactory:98] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 22-12-09 13:41:41[restartedMain] [JdbcEnvironmentInitiator:72] - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
DEBUG 22-12-09 13:41:41[restartedMain] [JdbcEnvironmentInitiator:83] - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
DEBUG 22-12-09 13:41:41[restartedMain] [JdbcEnvironmentInitiator:389] - JDBC version : 4.2
INFO  22-12-09 13:41:41[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG 22-12-09 13:41:41[restartedMain] [IdentifierHelperBuilder:114] - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
DEBUG 22-12-09 13:41:41[restartedMain] [TypeConfiguration$Scope:149] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76ed1888] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55ee2eb]
DEBUG 22-12-09 13:41:41[restartedMain] [Namespace:51] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 22-12-09 13:41:41[restartedMain] [AnnotationBinder:547] - Binding entity from annotated class: com.example.database.vo.MemberVo
DEBUG 22-12-09 13:41:41[restartedMain] [Ejb3Column:227] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG 22-12-09 13:41:41[restartedMain] [EntityBinder:431] - Import with entity name member
DEBUG 22-12-09 13:41:41[restartedMain] [EntityBinder:874] - Bind entity com.example.database.vo.MemberVo on table member
DEBUG 22-12-09 13:41:41[restartedMain] [Ejb3Column:227] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(member), mappingColumn=mbr_no, insertable=true, updatable=true, unique=false}
DEBUG 22-12-09 13:41:41[restartedMain] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.example.database.vo.MemberVo] is safe
DEBUG 22-12-09 13:41:41[restartedMain] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.database.vo.MemberVo
DEBUG 22-12-09 13:41:41[restartedMain] [PropertyBinder:175] - MetadataSourceProcessor property mbrNo with lazy=false
DEBUG 22-12-09 13:41:41[restartedMain] [AbstractPropertyHolder:94] - Attempting to locate auto-apply AttributeConverter for property [com.example.database.vo.MemberVo:mbrNo]
DEBUG 22-12-09 13:41:41[restartedMain] [SimpleValueBinder:410] - building SimpleValue for mbrNo
DEBUG 22-12-09 13:41:41[restartedMain] [PropertyBinder:266] - Building property mbrNo
DEBUG 22-12-09 13:41:41[restartedMain] [BinderHelper:514] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(mbr_no)]), mbrNo, identity, , ...)
DEBUG 22-12-09 13:41:41[restartedMain] [Ejb3Column:227] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(member), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG 22-12-09 13:41:41[restartedMain] [PropertyBinder:175] - MetadataSourceProcessor property id with lazy=false
DEBUG 22-12-09 13:41:41[restartedMain] [AbstractPropertyHolder:94] - Attempting to locate auto-apply AttributeConverter for property [com.example.database.vo.MemberVo:id]
DEBUG 22-12-09 13:41:41[restartedMain] [SimpleValueBinder:410] - building SimpleValue for id
DEBUG 22-12-09 13:41:41[restartedMain] [PropertyBinder:266] - Building property id
DEBUG 22-12-09 13:41:41[restartedMain] [Ejb3Column:227] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(member), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG 22-12-09 13:41:41[restartedMain] [PropertyBinder:175] - MetadataSourceProcessor property name with lazy=false
DEBUG 22-12-09 13:41:41[restartedMain] [AbstractPropertyHolder:94] - Attempting to locate auto-apply AttributeConverter for property [com.example.database.vo.MemberVo:name]
DEBUG 22-12-09 13:41:41[restartedMain] [SimpleValueBinder:410] - building SimpleValue for name
DEBUG 22-12-09 13:41:41[restartedMain] [PropertyBinder:266] - Building property name
DEBUG 22-12-09 13:41:41[restartedMain] [SimpleValueBinder:455] - Starting fillSimpleValue for mbrNo
DEBUG 22-12-09 13:41:41[restartedMain] [SimpleValueBinder:455] - Starting fillSimpleValue for id
DEBUG 22-12-09 13:41:41[restartedMain] [SimpleValueBinder:455] - Starting fillSimpleValue for name
DEBUG 22-12-09 13:41:41[restartedMain] [PrimaryKey:36] - Forcing column [mbr_no] to be non-null as it is part of the primary key for table [member]
DEBUG 22-12-09 13:41:41[restartedMain] [SessionFactoryImpl:208] - Building session factory
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:68] - SessionFactory name : null
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:69] - Automatic flush during beforeCompletion(): enabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:70] - Automatic session close at end of transaction: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:72] - Statistics: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:74] - Deleted entity synthetic identifier rollback: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:75] - Default entity-mode: pojo
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:76] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:77] - Allow initialization of lazy state outside session : disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:79] - Using BatchFetchStyle : LEGACY
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:80] - Default batch fetch size: -1
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:81] - Maximum outer join fetch depth: null
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:82] - Default null ordering: NONE
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:83] - Order SQL updates by primary key: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:84] - Order SQL inserts for batching: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:86] - multi-tenancy strategy : NONE
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:88] - JTA Track by Thread: enabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:90] - Query language substitutions: {}
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:91] - Named query checking : enabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:93] - Second-level cache: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:94] - Second-level query cache: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:95] - Second-level query cache factory: null
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:96] - Second-level cache region prefix: null
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:97] - Optimize second-level cache for minimal puts: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:98] - Structured second-level cache entries: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:99] - Second-level cache direct-reference entries: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:100] - Automatic eviction of collection cache: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:102] - JDBC batch size: 15
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:103] - JDBC batch updates for versioned data: enabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:104] - Scrollable result sets: enabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:105] - Wrap result sets: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:106] - JDBC3 getGeneratedKeys(): enabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:107] - JDBC result set fetch size: null
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:108] - Connection release mode: ON_CLOSE
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:109] - Generate SQL with comments: disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:111] - JPA compliance - query : disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:112] - JPA compliance - closed-handling : disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:113] - JPA compliance - lists : disabled
DEBUG 22-12-09 13:41:41[restartedMain] [Settings:114] - JPA compliance - transactions : disabled
DEBUG 22-12-09 13:41:41[restartedMain] [SessionFactoryServiceRegistryImpl:92] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
DEBUG 22-12-09 13:41:41[restartedMain] [SessionFactoryServiceRegistryImpl:92] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
DEBUG 22-12-09 13:41:41[restartedMain] [SessionFactoryImpl:276] - Session factory constructed with filter configurations : {}
DEBUG 22-12-09 13:41:41[restartedMain] [SessionFactoryImpl:277] - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5a55b171, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main;C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\resources\main;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-web\2.7.5\bb4099d0466a62c3b11ab9323babca13bb430a2e\spring-boot-starter-web-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-thymeleaf\2.7.5\d2be8d1d822d988924e0a23c81d795ae5aa288f3\spring-boot-starter-thymeleaf-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-quartz\2.7.5\cc8674b8e7530cb0b3506b6abbb49e6264260aaf\spring-boot-starter-quartz-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-json\2.7.5\9c7df04ff37b2e7471632ddeb4a296c5fb6bddee\spring-boot-starter-json-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-data-jdbc\2.7.5\bde6c55c509490e7765013ed98f112f12f9115fe\spring-boot-starter-data-jdbc-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-data-jpa\2.7.5\b83184467079d5b808fb2f9fbc858b1804975808\spring-boot-starter-data-jpa-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-jdbc\2.7.5\b57c3f8fb2fe235a8ff368755092371423bbc5b3\spring-boot-starter-jdbc-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-aop\2.7.5\ea4b85395faaa3a382f2a582e4bf023d088d320e\spring-boot-starter-aop-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter\2.7.5\c28e1546461803490588085345ba5d2897d232bc\spring-boot-starter-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.netty\netty-all\4.0.33.Final\119a52dd0818028dfe9ac92471ecebf3038f5cca\netty-all-4.0.33.Final.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.apache.tomcat.embed\tomcat-embed-jasper\9.0.68\870261af278b3e5060c662c81bc5a2d74ac6217b\tomcat-embed-jasper-9.0.68.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\javax.servlet\jstl\1.2\74aca283cd4f4b4f3e425f5820cda58f44409547\jstl-1.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-devtools\2.7.1\cb154a2b04532d9cb7c0b4a04132c57bf8efae31\spring-boot-devtools-2.7.1.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.projectlombok\lombok\1.18.24\13a394eed5c4f9efb2a6d956e2086f1d81e857d9\lombok-1.18.24.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.bgee.log4jdbc-log4j2\log4jdbc-log4j2-jdbc4.1\1.16\ce7cd831b2e3e5d428e659a6fdae0fb6b89f3cc7\log4jdbc-log4j2-jdbc4.1-1.16.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-boot-starter\3.0.0\5486365e263f8acca014b97efa50c3419d58e8f6\springfox-boot-starter-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.github.ulisesbocchio\jasypt-spring-boot-starter\3.0.4\ba3f0ef32c86dfcd15f5c273672d12bffdc0a09b\jasypt-spring-boot-starter-3.0.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.jsonwebtoken\jjwt\0.9.1\54d2abfc3e63a28824d35bf600d6a5d627da681a\jjwt-0.9.1.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.kafka\spring-kafka\2.8.10\16f646b97d2b2067ef06875987cb928f62953e98\spring-kafka-2.8.10.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.h2database\h2\2.1.214\d5c2005c9e3279201e12d4776c948578b16bf8b2\h2-2.1.214.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-autoconfigure\2.7.5\96646e63a2296d0a3209383e81cdb8c87ab2f913\spring-boot-autoconfigure-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot\2.7.5\fd04e228e6e21b7ad13c10ae29afd31868d842e5\spring-boot-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-logging\2.7.5\61f4c53e35baa31a269bbeb7bb9d5e781448feef\spring-boot-starter-logging-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-tomcat\2.7.5\eb7849c52953de44d9712adf45398ccb1a7d4295\spring-boot-starter-tomcat-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\jakarta.annotation\jakarta.annotation-api\1.3.5\59eb84ee0d616332ff44aba065f3888cf002cd2d\jakarta.annotation-api-1.3.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-webmvc\5.3.23\b163527c275b0374371890c0b76c2a2a09f9804b\spring-webmvc-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-web\5.3.23\193f5276092d9cbe3222c63885b47ca7b2cce97\spring-web-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.data\spring-data-jdbc\2.4.5\bb1c2d6c9c5bb2448bcc9b86232eb32150b28bd8\spring-data-jdbc-2.4.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.data\spring-data-jpa\2.7.5\dc0bb497a33fcd3f82fe0ccfd674476d93889b3d\spring-data-jpa-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-context-support\5.3.23\550dcf70ce1daeb3940f6f464bba38096cdb8b73\spring-context-support-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-orm\5.3.23\7d023546cde0f1b2b8d289c690679f740394298b\spring-orm-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-jdbc\5.3.23\c859919a644942822e49cb7f2404b2c4d3cba040\spring-jdbc-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.data\spring-data-relational\2.4.5\b1c2a64ba7b378b96913f210bd4d9f2cf6771053\spring-data-relational-2.4.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-tx\5.3.23\ab313b4028c62e18fe02defdd5050af704778428\spring-tx-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-oas\3.0.0\e7bc9c1319cf1b64ae714a249c3db3b8fe01e42b\springfox-oas-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-data-rest\3.0.0\40f5e834d6696ae1d3212fa5a2d5e1ec406bedc0\springfox-data-rest-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-bean-validators\3.0.0\80c646fdebe5f2b2b337a5a686e540fee0b7304f\springfox-bean-validators-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-swagger2\3.0.0\7bcb18d496576eff76ef7bb72684e149cbb75c1d\springfox-swagger2-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-swagger-ui\3.0.0\1e665fbe22148f7c36fa8a08e515a0047cd4390b\springfox-swagger-ui-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-swagger-common\3.0.0\2e2fae840984cfcabfd50e1b4b1c23422135ba12\springfox-swagger-common-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-spring-webmvc\3.0.0\7ed22363fdfd651cd811c0b2391f16bddb91db8b\springfox-spring-webmvc-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-spring-webflux\3.0.0\efccbcfe1d23f2ba520bd87cc156bf2b81f3568e\springfox-spring-webflux-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-spring-web\3.0.0\a76f2fbe805bfd2798e20dc8f2cfbfad554d52da\springfox-spring-web-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-schema\3.0.0\32c5d6965617830ef6480fadb9030008945bcd9c\springfox-schema-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-spi\3.0.0\bae0b820d4b5a922063d34a42aaf4f763308b828\springfox-spi-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-core\3.0.0\7c3367ce577c8acd9bf64c74488c9269253516c9\springfox-core-3.0.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.plugin\spring-plugin-metadata\2.0.0.RELEASE\6fb3a1fc0f05dc826687b7686ad8a5960ecdd57c\spring-plugin-metadata-2.0.0.RELEASE.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.plugin\spring-plugin-core\2.0.0.RELEASE\95fc8c13037630f4aba9c51141f535becec00fe6\spring-plugin-core-2.0.0.RELEASE.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-context\5.3.23\530b36b2ce2c9e471c6a260c3f181bcd20325a58\spring-context-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-messaging\5.3.23\ba45e1d5cbafca683baa5d801b779eba1f4adaee\spring-messaging-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-aop\5.3.23\30d0034ba29178e98781d85f51a7eb709a628e9b\spring-aop-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.data\spring-data-commons\2.7.5\314b3faf010d9a5bf5a7cf12914e721ad0257f4\spring-data-commons-2.7.5.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-beans\5.3.23\3bdefbf6042ed742cbe16f27d2d14cca9096a606\spring-beans-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-expression\5.3.23\3a676bf4b9bc42bd37ab5ad264acb6ceb63397a2\spring-expression-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-core\5.3.23\91407dc1106ea423c44150f3da1a0b4f8e25e5ca\spring-core-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.yaml\snakeyaml\1.30\8fde7fe2586328ac3c68db92045e1c8759125000\snakeyaml-1.30.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.apache.tomcat.embed\tomcat-embed-websocket\9.0.68\15fc94001bb916a808631422a6488a678496ef94\tomcat-embed-websocket-9.0.68.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.apache.tomcat.embed\tomcat-embed-core\9.0.68\caafeb87d6ff30adda888049c9b81591c7cc20d1\tomcat-embed-core-9.0.68.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.apache.tomcat.embed\tomcat-embed-el\9.0.68\296afe7483256960d7ebdd8dcb4b49775d7cb85f\tomcat-embed-el-9.0.68.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.eclipse.jdt\ecj\3.18.0\4d5d0911b30db24c8eb844702c8adf8e434314ff\ecj-3.18.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\7170e1bcd1588d38c139f7048ebcc262676441c3\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.thymeleaf.extras\thymeleaf-extras-java8time\3.0.4.RELEASE\36e7175ddce36c486fff4578b5af7bb32f54f5df\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\jakarta.transaction\jakarta.transaction-api\1.3.3\c4179d48720a1e87202115fbed6089bdc4195405\jakarta.transaction-api-1.3.3.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\jakarta.persistence\jakarta.persistence-api\2.2.3\8f6ea5daedc614f07a3654a455660145286f024e\jakarta.persistence-api-2.2.3.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.hibernate\hibernate-core\5.6.12.Final\66720fe38bdb9515924d559b8aac7b522d7ae171\hibernate-core-5.6.12.Final.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-aspects\5.3.23\35a0f5df4241f794fd79dd2447195ac055e88b8e\spring-aspects-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.fasterxml\classmate\1.5.1\3fe0bed568c62df5e89f4f174c101eab25345b6c\classmate-1.5.1.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.quartz-scheduler\quartz\2.3.2\18a6d6b5a40b77bd060b34cb9f2acadc4bae7c8a\quartz-2.3.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.1.2\6b6e2cc01cd7e772296941aca74b2fff96e7c820\kafka-clients-3.1.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\ch.qos.logback\logback-classic\1.2.11\4741689214e9d1e8408b206506cbe76d1c6a7d60\logback-classic-1.2.11.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-to-slf4j\2.17.2\17dd0fae2747d9a28c67bc9534108823d2376b46\log4j-to-slf4j-2.17.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.slf4j\jul-to-slf4j\1.7.36\ed46d81cef9c412a88caef405b58f93a678ff2ca\jul-to-slf4j-1.7.36.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.thymeleaf\thymeleaf\3.0.15.RELEASE\13e3296a03d8a597b734d832ed8656139bf9cdd8\thymeleaf-3.0.15.RELEASE.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.zaxxer\HikariCP\4.0.3\107cbdf0db6780a065f895ae9d8fbf3bb0e1c21f\HikariCP-4.0.3.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.swagger\swagger-models\1.5.20\fb3a23bad80c5ed84db9dd150db2cba699531458\swagger-models-1.5.20.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.slf4j\slf4j-api\1.7.36\6c62681a2f655b49963a5983b8b0950a6120ae14\slf4j-api-1.7.36.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.github.ulisesbocchio\jasypt-spring-boot\3.0.4\c45792cc2f5041456bb29e8029e77aa8bdf48c1\jasypt-spring-boot-3.0.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.datatype\jackson-datatype-jsr310\2.13.4\e6d820112871f33cd94a1dcc54eef58874753b5\jackson-datatype-jsr310-2.13.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.module\jackson-module-parameter-names\2.13.4\858ccf6624b5fac6044813e845063edb6a62cf37\jackson-module-parameter-names-2.13.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.swagger.core.v3\swagger-models\2.1.2\e7edeed6456a16d707542c003af03a594ecafe3a\swagger-models-2.1.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.core\jackson-annotations\2.13.4\858c6cc78e1f08a885b1613e1d817c829df70a6e\jackson-annotations-2.13.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.core\jackson-core\2.13.4\cf934c681294b97ef6d80082faeefbe1edadf56\jackson-core-2.13.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.datatype\jackson-datatype-jdk8\2.13.4\557dbba5d8dfc7b7f944c58fe084109afcb5670b\jackson-datatype-jdk8-2.13.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.core\jackson-databind\2.13.4.2\325c06bdfeb628cfb80ebaaf1a26cc1eb558a585\jackson-databind-2.13.4.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework.retry\spring-retry\1.3.4\4262d75536b193ea70bd3e854155462623d180a5\spring-retry-1.3.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.google.code.findbugs\jsr305\3.0.2\25ea2e8b0c338a877313bd4672d3fe056ea78f0d\jsr305-3.0.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.springframework\spring-jcl\5.3.23\3c7eb5fcca67b611065f73ff4325e398f8b051a3\spring-jcl-5.3.23.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.apache.tomcat\tomcat-annotations-api\9.0.68\2a0674ad7fc044efdcaa7ad3d6dc4e15b74ebcaf\tomcat-annotations-api-9.0.68.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.aspectj\aspectjweaver\1.9.7\158f5c255cd3e4408e795b79f7c3fbae9b53b7ca\aspectjweaver-1.9.7.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.hibernate.common\hibernate-commons-annotations\5.1.2.Final\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.jboss.logging\jboss-logging\3.4.3.Final\c4bd7e12a745c0e7f6cf98c45cdcdf482fd827ea\jboss-logging-3.4.3.Final.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy\1.12.18\875a9c3f29d2f6f499dfd60d76e97a343f9b1233\byte-buddy-1.12.18.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\antlr\antlr\2.7.7\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\antlr-2.7.7.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.jboss\jandex\2.4.2.Final\1e1c385990b258ff1a24c801e84aebbacf70eb39\jandex-2.4.2.Final.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.glassfish.jaxb\jaxb-runtime\2.3.7\ebcde6a44159eb9e3db721dfe6b45f26e6272341\jaxb-runtime-2.3.7.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.swagger.core.v3\swagger-annotations\2.1.2\d407a33aa71444802c640080eb4d5f499b027f96\swagger-annotations-2.1.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.mapstruct\mapstruct\1.3.1.Final\6ab184bbc7a7029738277a244e4c535fcdc3f558\mapstruct-1.3.1.Final.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.swagger\swagger-annotations\1.5.20\16051f93ce11ca489a5313775d825f82fcc2cd6c\swagger-annotations-1.5.20.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.jasypt\jasypt\1.9.3\d99ef9540f51c617f2a293b460f025d2ee563dd\jasypt-1.9.3.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.mchange\mchange-commons-java\0.2.15\6ef5abe5f1b94ac45b7b5bad42d871da4fda6bbc\mchange-commons-java-0.2.15.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.github.luben\zstd-jni\1.5.0-4\338d83645fb93afc9e8b38a12d9d16d41d0819b3\zstd-jni-1.5.0-4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.lz4\lz4-java\1.8.0\4b986a99445e49ea5fbf5d149c4b63f6ed6c6780\lz4-java-1.8.0.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.xerial.snappy\snappy-java\1.1.8.4\66f0d56454509f6e36175f2331572e250e04a6cc\snappy-java-1.1.8.4.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\ch.qos.logback\logback-core\1.2.11\a01230df5ca5c34540cdaa3ad5efb012f1f1f792\logback-core-1.2.11.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-api\2.17.2\f42d6afa111b4dec5d2aea0fe2197240749a4ea6\log4j-api-2.17.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.attoparser\attoparser\2.0.5.RELEASE\a93ad36df9560de3a5312c1d14f69d938099fa64\attoparser-2.0.5.RELEASE.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.unbescape\unbescape\1.1.6.RELEASE\7b90360afb2b860e09e8347112800d12c12b2a13\unbescape-1.1.6.RELEASE.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\jakarta.xml.bind\jakarta.xml.bind-api\2.3.3\48e3b9cfc10752fba3521d6511f4165bea951801\jakarta.xml.bind-api-2.3.3.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\org.glassfish.jaxb\txw2\2.3.7\55cddcac1945150e09b09b0f89d86799652eee82\txw2-2.3.7.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.sun.istack\istack-commons-runtime\3.0.12\cbbe1a62b0cc6c85972e99d52aaee350153dc530\istack-commons-runtime-3.0.12.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\com.sun.activation\jakarta.activation\1.2.2\74548703f9851017ce2f556066659438019e7eb5\jakarta.activation-1.2.2.jar;C:\Users\user\.gradle\caches\modules-2\files-2.1\io.github.classgraph\classgraph\4.8.83\7be289f451cedf9e35ed97caba3953226b4e6d9\classgraph-4.8.83.jar, java.vm.vendor=ojdkbuild, sun.arch.data.model=64, user.variant=, java.vendor.url=https://github.com/ojdkbuild, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=17, os.name=Windows 10, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=KR, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\ojdkbuild\java-17-openjdk-17.0.3.0.6-1\bin, sun.java.command=com.example.HelloWorldSpringBootApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@45fc4ee9, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\user, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=C:\Program Files\ojdkbuild\java-17-openjdk-17.0.3.0.6-1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.3+6-LTS, user.name=user, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=21.9, java.vendor.url.bug=https://github.com/ojdkbuild/ojdkbuild/issues, java.io.tmpdir=C:\Users\user\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\user\AppData\Local\Temp\tomcat.8443.17315564126441292920, java.version=17.0.3, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\user\IdeaProjects\HelloWorld-SpringBoot, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3240, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\user\AppData\Local\Temp\tomcat.8443.17315564126441292920, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@46b7a8b3, native.encoding=MS949, java.library.path=C:\Program Files\ojdkbuild\java-17-openjdk-17.0.3.0.6-1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Bandizip\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files (x86)\Windows Kits\8.0\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\ojdkbuild\java-17-openjdk-17.0.3.0.6-1\bin;C:\Program Files\ojdkbuild\java-17-openjdk-17.0.3.0.6-1\jre\bin;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Program Files\ojdkbuild\java-1.8.0-openjdk-1.8.0.302-1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\user\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2\bin;;., java.vendor=ojdkbuild, java.vm.info=mixed mode, sharing, java.vm.version=17.0.3+6-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
DEBUG 22-12-09 13:41:41[restartedMain] [JaccIntegrator:84] - Skipping JACC integration as it was not enabled
DEBUG 22-12-09 13:41:41[restartedMain] [SessionFactoryImpl:316] - Instantiated session factory
DEBUG 22-12-09 13:41:41[restartedMain] [TypeConfiguration$Scope:154] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76ed1888] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4efb272a]
DEBUG 22-12-09 13:41:41[restartedMain] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.example.database.vo.MemberVo] is safe
DEBUG 22-12-09 13:41:41[restartedMain] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.database.vo.MemberVo
DEBUG 22-12-09 13:41:42[restartedMain] [AbstractEntityPersister:4002] - Static SQL for entity: com.example.database.vo.MemberVo
DEBUG 22-12-09 13:41:42[restartedMain] [AbstractEntityPersister:4007] -  Version select: select mbr_no from member where mbr_no =?
DEBUG 22-12-09 13:41:42[restartedMain] [AbstractEntityPersister:4010] -  Snapshot select: select membervo_.mbr_no, membervo_.id as id2_0_, membervo_.name as name3_0_ from member membervo_ where membervo_.mbr_no=?
DEBUG 22-12-09 13:41:42[restartedMain] [AbstractEntityPersister:394] -  Insert 0: insert into member (id, name, mbr_no) values (?, ?, ?)
DEBUG 22-12-09 13:41:42[restartedMain] [AbstractEntityPersister:394] -  Update 0: update member set id=?, name=? where mbr_no=?
DEBUG 22-12-09 13:41:42[restartedMain] [AbstractEntityPersister:394] -  Delete 0: delete from member where mbr_no=?
DEBUG 22-12-09 13:41:42[restartedMain] [AbstractEntityPersister:4018] -  Identity insert: insert into member (mbr_no, id, name) values (default, ?, ?)
DEBUG 22-12-09 13:41:42[restartedMain] [QuerySpacesImpl:174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a9b3185]
DEBUG 22-12-09 13:41:42[restartedMain] [MetamodelGraphWalker:146] - Visiting attribute path : id
DEBUG 22-12-09 13:41:42[restartedMain] [MetamodelGraphWalker:146] - Visiting attribute path : name
DEBUG 22-12-09 13:41:42[restartedMain] [FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160] - Building LoadPlan...
DEBUG 22-12-09 13:41:42[restartedMain] [LoadQueryJoinAndFetchProcessor:102] - processing queryspace <gen:0>
DEBUG 22-12-09 13:41:42[restartedMain] [LoadPlanTreePrinter:55] - LoadPlan(entity=com.example.database.vo.MemberVo)
    - Returns
       - EntityReturnImpl(entity=com.example.database.vo.MemberVo, querySpaceUid=<gen:0>, path=com.example.database.vo.MemberVo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.database.vo.MemberVo)
          - SQL table alias mapping - membervo0_
          - alias suffix - 0_
          - suffixed key columns - {mbr_no1_0_0_}

DEBUG 22-12-09 13:41:42[restartedMain] [EntityLoader:129] - Static select for entity com.example.database.vo.MemberVo [NONE]: select membervo0_.mbr_no as mbr_no1_0_0_, membervo0_.id as id2_0_0_, membervo0_.name as name3_0_0_ from member membervo0_ where membervo0_.mbr_no=?
DEBUG 22-12-09 13:41:42[restartedMain] [SQL:144] - 
    
    drop table if exists member CASCADE 
DEBUG 22-12-09 13:41:42[restartedMain] [SQL:144] - 
    
    create table member (
       mbr_no bigint generated by default as identity,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    )
INFO  22-12-09 13:41:42[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG 22-12-09 13:41:42[restartedMain] [NamedQueryRepository:171] - Checking 0 named HQL queries
DEBUG 22-12-09 13:41:42[restartedMain] [NamedQueryRepository:185] - Checking 0 named SQL queries
DEBUG 22-12-09 13:41:42[restartedMain] [SessionFactoryServiceRegistryImpl:92] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
DEBUG 22-12-09 13:41:42[restartedMain] [SessionFactoryRegistry:51] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@76d7460
DEBUG 22-12-09 13:41:42[restartedMain] [SessionFactoryRegistry:73] - Registering SessionFactory: 5f321aa9-00b1-46ad-8698-d99d0a11040b (<unnamed>)
DEBUG 22-12-09 13:41:42[restartedMain] [SessionFactoryRegistry:80] - Not binding SessionFactory to JNDI, no JNDI name configured
INFO  22-12-09 13:41:42[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'helloWorldSpringBootApplication'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpaRestController'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'memberService'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'memberRepository'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpaMappingContext'
DEBUG 22-12-09 13:41:42[restartedMain] [JpaMetamodelMappingContextFactoryBean:77] - Initializing JpaMetamodelMappingContext…
DEBUG 22-12-09 13:41:42[restartedMain] [JpaMetamodelMappingContextFactoryBean:84] - Finished initializing JpaMetamodelMappingContext!
DEBUG 22-12-09 13:41:42[restartedMain] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 22-12-09 13:41:42[restartedMain] [StatisticsInitiator:101] - Statistics initialized [enabled=false]
DEBUG 22-12-09 13:41:42[restartedMain] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 22-12-09 13:41:42[restartedMain] [CachedIntrospectionResults:192] - Not strongly caching class [com.example.database.vo.MemberVo] because it is not cache-safe
DEBUG 22-12-09 13:41:42[restartedMain] [RepositoryFactorySupport:280] - Initializing repository instance for com.example.database.repository.MemberRepository…
DEBUG 22-12-09 13:41:42[restartedMain] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 22-12-09 13:41:42[restartedMain] [NamedQuery:141] - Looking up named query MemberVo.findByName
DEBUG 22-12-09 13:41:42[restartedMain] [TransactionImpl:53] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG 22-12-09 13:41:42[restartedMain] [NamedQuery:120] - Did not find named query MemberVo.findByName
DEBUG 22-12-09 13:41:42[restartedMain] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 22-12-09 13:41:42[restartedMain] [NamedQuery:141] - Looking up named query MemberVo.findByNameLike
DEBUG 22-12-09 13:41:42[restartedMain] [TransactionImpl:53] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG 22-12-09 13:41:42[restartedMain] [NamedQuery:120] - Did not find named query MemberVo.findByNameLike
DEBUG 22-12-09 13:41:42[restartedMain] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 22-12-09 13:41:42[restartedMain] [NamedQuery:141] - Looking up named query MemberVo.findById
DEBUG 22-12-09 13:41:42[restartedMain] [TransactionImpl:53] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG 22-12-09 13:41:42[restartedMain] [NamedQuery:120] - Did not find named query MemberVo.findById
DEBUG 22-12-09 13:41:42[restartedMain] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 22-12-09 13:41:42[restartedMain] [RepositoryFactorySupport:377] - Finished creation of repository instance for com.example.database.repository.MemberRepository.
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jwtProvider'
DEBUG 22-12-09 13:41:42[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'jwt.password' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaConsumer'
DEBUG 22-12-09 13:41:42[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'message.topic.name' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:42[restartedMain] [KafkaListenerAnnotationBeanPostProcessor:313] - No retry topic configuration found for topics [test]
DEBUG 22-12-09 13:41:42[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'spring.kafka.consumer.group-id' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:42[restartedMain] [KafkaListenerAnnotationBeanPostProcessor:313] - 1 @KafkaListener methods processed on bean 'kafkaConsumer': {public void com.example.kafka.KafkaConsumer.consume(java.lang.String) throws java.io.IOException=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"${message.topic.name}"}, groupId="${spring.kafka.consumer.group-id}", batch="", clientIdPrefix="", topicPartitions={}, splitIterables=true, autoStartup="", concurrency="", filter="", idIsGroup=true, containerGroup="", errorHandler="", id="", properties={}, info="")]}
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaProducer'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaTemplate'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.kafka-org.springframework.boot.autoconfigure.kafka.KafkaProperties'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration' via constructor to bean named 'spring.kafka-org.springframework.boot.autoconfigure.kafka.KafkaProperties'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaProducerFactory'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaProducerListener'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'kafkaTemplate' via factory method to bean named 'kafkaProducerFactory'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'kafkaTemplate' via factory method to bean named 'kafkaProducerListener'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'kafkaProducer' via constructor to bean named 'kafkaTemplate'
DEBUG 22-12-09 13:41:42[restartedMain] [PropertySourcesPropertyResolver:115] - Found key 'message.topic.name' in PropertySource 'environmentProperties' with value of type String
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaController'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'kafkaController' via constructor to bean named 'kafkaProducer'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'nettyController'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'testJobA'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jobConfig'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'quartzScheduler'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.quartz-org.springframework.boot.autoconfigure.quartz.QuartzProperties'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'quartzScheduler' via factory method to bean named 'spring.quartz-org.springframework.boot.autoconfigure.quartz.QuartzProperties'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'quartzScheduler' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:42[Thread-5] [InternalLoggerFactory:71] - Using SLF4J as the default logging framework
DEBUG 22-12-09 13:41:42[Thread-5] [MultithreadEventLoopGroup:76] - -Dio.netty.eventLoopThreads: 16
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent0:76] - java.nio.Buffer.address: unavailable
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:71] - Platform: Windows
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:76] - Java version: 8
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:76] - -Dio.netty.noUnsafe: false
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:76] - sun.misc.Unsafe: unavailable
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:76] - maxDirectMemory: 2076180480 bytes (maybe)
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:76] - -Dio.netty.noJavassist: false
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:71] - Javassist: unavailable
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:71] - You don't have Javassist in your class path or you don't have enough permission to load dynamically generated classes.  Please check the configuration for better performance.
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:76] - -Dio.netty.tmpdir: C:\Users\user\AppData\Local\Temp (java.io.tmpdir)
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:76] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
DEBUG 22-12-09 13:41:42[Thread-5] [PlatformDependent:76] - -Dio.netty.noPreferDirect: true
INFO  22-12-09 13:41:42[Thread-5] [PlatformDependent:101] - Your platform does not provide complete low-level API for accessing direct buffers reliably. Unless explicitly requested, heap buffer will always be preferred to avoid potential system unstability.
DEBUG 22-12-09 13:41:42[Thread-5] [NioEventLoop:76] - -Dio.netty.noKeySetOptimization: false
DEBUG 22-12-09 13:41:42[Thread-5] [NioEventLoop:76] - -Dio.netty.selectorAutoRebuildThreshold: 512
INFO  22-12-09 13:41:42[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  22-12-09 13:41:42[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  22-12-09 13:41:42[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  22-12-09 13:41:42[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  22-12-09 13:41:42[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  22-12-09 13:41:42[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  22-12-09 13:41:42[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  22-12-09 13:41:42[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@6b0aec7d
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'testScheduler'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerConfig'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'customErrorController'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'exceptionController'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'helloController'
DEBUG 22-12-09 13:41:42[Thread-5] [ThreadLocalRandom:71] - -Dio.netty.initialSeedUniquifier: 0x28ca43d565238ae7 (took 2 ms)
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'testService'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'helloController' via constructor to bean named 'testService'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'tokenController'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'tokenController' via constructor to bean named 'jwtProvider'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'serviceModelToSwagger2MapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'compatibilityModelMapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'securityMapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'licenseMapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'vendorExtensionsMapperImpl'
DEBUG 22-12-09 13:41:42[Thread-5] [ByteBufUtil:76] - -Dio.netty.allocator.type: unpooled
DEBUG 22-12-09 13:41:42[Thread-5] [ByteBufUtil:76] - -Dio.netty.threadLocalDirectBufferSize: 65536
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'propertyMapperImpl'
DEBUG 22-12-09 13:41:42[Thread-5] [ByteBufUtil:76] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterMapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'modelMapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestParameterMapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'modelSpecificationMapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swagger2ControllerWebMvc'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'resourceGroupCache'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.spring.web.SpringfoxWebConfiguration'
DEBUG 22-12-09 13:41:42[Thread-5] [NetUtil:86] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
DEBUG 22-12-09 13:41:42[Thread-5] [NetUtil:81] - \proc\sys\net\core\somaxconn: 200 (non-existent)
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonSerializer'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swagger2Module'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openApiModule'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.oas.configuration.OpenApiMappingConfiguration'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jsonSerializer' via factory method to bean named 'swagger2Module'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jsonSerializer' via factory method to bean named 'openApiModule'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webMvcSwaggerTransformationFilterRegistry'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swagger2ControllerWebMvc' via constructor to bean named 'resourceGroupCache'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swagger2ControllerWebMvc' via constructor to bean named 'serviceModelToSwagger2MapperImpl'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swagger2ControllerWebMvc' via constructor to bean named 'jsonSerializer'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swagger2ControllerWebMvc' via constructor to bean named 'webMvcSwaggerTransformationFilterRegistry'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openApiSchemaPropertyBuilder'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'descriptionResolver'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'descriptionResolver' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'typeNameExtractor'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'typeResolver'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.schema.configuration.ModelsConfiguration'
DEBUG 22-12-09 13:41:42[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'typeNameProviderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'typeNameExtractor' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'typeNameExtractor' via constructor to bean named 'typeNameProviderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'typeNameExtractor' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'modelSpecificationFactory' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'modelSpecificationFactory' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiSchemaPropertyBuilder' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiSchemaPropertyBuilder' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiModelPropertyPropertyBuilder'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelPropertyPropertyBuilder' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelPropertyPropertyBuilder' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiModelTypeNameProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiModelBuilder'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelBuilder' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelBuilder' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelBuilder' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelBuilder' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationImplicitParameterReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationImplicitParameterReader' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'vendorExtensionsReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerOperationResponseClassReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerOperationResponseClassReader' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerOperationResponseClassReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerOperationResponseClassReader' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerOperationModelsProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerOperationModelsProvider' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openApiOperationAuthReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerMediaTypeReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationHttpMethodReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationImplicitParametersReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationImplicitParametersReader' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationAuthReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationHiddenReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationSummaryReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationSummaryReader' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openApiOperationTagsReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerResponseMessageReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'documentationPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiListingBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'expandedParameterBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationModelsProviderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultsProviderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pathDecoratorRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiListingScannerPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'responseBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'modelNamesRegistryFactoryPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationNicknameIntoUniqueIdReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationPositionReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openApiResponseReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiResponseReader' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiResponseReader' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiResponseReader' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationNotesReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationNotesReader' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerOperationTagsReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerParameterDescriptionReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerParameterDescriptionReader' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerParameterDescriptionReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerExpandedParameterBuilder'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerExpandedParameterBuilder' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'swaggerExpandedParameterBuilder' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openApiParameterBuilder'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiParameterBuilder' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerApiListingReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'inMemorySwaggerResourcesProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'inMemorySwaggerResourcesProvider' via constructor to bean named 'environment'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'inMemorySwaggerResourcesProvider' via constructor to bean named 'resourceGroupCache'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'inMemorySwaggerResourcesProvider' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'api'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiResourceController'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiResourceController' via constructor to bean named 'inMemorySwaggerResourcesProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiListingReferenceScanner'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiDocumentationScanner'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiListingScanner'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiDescriptionReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'cachingOperationReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiOperationReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'cachingOperationNameGenerator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiOperationReader' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiOperationReader' via constructor to bean named 'cachingOperationNameGenerator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'cachingOperationReader' via constructor to bean named 'apiOperationReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiDescriptionLookup'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'cachingOperationReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'apiDescriptionLookup'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiModelReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'cachingModelProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultModelProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'cachingModelPropertiesProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'optimized'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'accessorsProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'accessorsProvider' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'fieldProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'fieldProvider' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'factoryMethodProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'factoryMethodProvider' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'objectMapperBeanPropertyNamingStrategy'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'modelPropertyBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'modelBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewProviderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'syntheticModelProviderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'modelPropertyBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'modelBuilderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'viewProviderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'syntheticModelProviderPluginRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'accessorsProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'fieldProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'factoryMethodProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'objectMapperBeanPropertyNamingStrategy'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optimized' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'cachingModelPropertiesProvider' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'cachingModelPropertiesProvider' via constructor to bean named 'optimized'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'cachingModelDependencyProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultModelDependencyProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'cachingModelPropertiesProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'cachingModelDependencyProvider' via constructor to bean named 'defaultModelDependencyProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'cachingModelPropertiesProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'cachingModelDependencyProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultModelSpecificationProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelSpecificationProvider' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelSpecificationProvider' via constructor to bean named 'cachingModelPropertiesProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelSpecificationProvider' via constructor to bean named 'cachingModelDependencyProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelSpecificationProvider' via constructor to bean named 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelSpecificationProvider' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelSpecificationProvider' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'defaultModelSpecificationProvider' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'cachingModelProvider' via constructor to bean named 'defaultModelProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'cachingModelProvider' via constructor to bean named 'defaultModelSpecificationProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'cachingModelProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiModelSpecificationReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelSpecificationReader' via constructor to bean named 'cachingModelProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelSpecificationReader' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiModelSpecificationReader' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'apiDescriptionReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'apiModelReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'apiModelSpecificationReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiDocumentationScanner' via constructor to bean named 'apiListingReferenceScanner'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'apiDocumentationScanner' via constructor to bean named 'apiListingScanner'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'apiListingReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mediaTypeReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationModelsProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationModelsProvider' via constructor to bean named 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationDeprecatedReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'responseMessagesReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'responseMessagesReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'responseMessagesReader' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'responseMessagesReader' via constructor to bean named 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'responseMessagesReader' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'responseMessagesReader' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationParameterReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'modelAttributeParameterExpander'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'modelAttributeParameterExpander' via constructor to bean named 'fieldProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'modelAttributeParameterExpander' via constructor to bean named 'accessorsProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'modelAttributeParameterExpander' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'contentParameterAggregator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationParameterReader' via constructor to bean named 'modelAttributeParameterExpander'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationParameterReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationParameterReader' via constructor to bean named 'contentParameterAggregator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationTagsReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultOperationReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationParameterRequestConditionReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationParameterRequestConditionReader' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationParameterHeadersConditionReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationParameterHeadersConditionReader' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationResponseClassReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationResponseClassReader' via constructor to bean named 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationResponseClassReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'operationResponseClassReader' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterMultiplesReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterTypeReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterRequiredReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'parameterRequiredReader' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterDataTypeReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'schemaPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterDefaultReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'parameterDefaultReader' via constructor to bean named 'descriptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterNameReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'expandedParameterBuilder'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'expandedParameterBuilder' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'expandedParameterBuilder' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webMvcRequestHandlerProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'methodResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'methodResolver' via factory method to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76cc2041'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76cc2041'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
WARN  22-12-09 13:41:43[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerUiConfigurer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.boot.starter.autoconfigure.SwaggerUiWebMvcConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	c.e.d.c.JpaRestController:
	{POST [/memberTest]}: save(MemberVo)
	{GET [/memberTest/saveMember]}: save(HttpServletRequest,MemberVo)
	{GET [/memberTest/{mbrNo}], produces [application/json]}: getMember(Long)
	{DELETE [/memberTest/{mbrNo}], produces [application/json]}: deleteMember(Long)
	{GET [/memberTest], produces [application/json]}: getAllmembers()
	{PUT [/memberTest/{mbrNo}], produces [application/json]}: updateMember(Long,MemberVo)
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	c.e.k.c.KafkaController:
	{ [/kafka/test/message]}: sendMessage(String)
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	c.e.n.s.NettyController:
	
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	c.e.w.c.CustomErrorController:
	{ [/error]}: handleError(HttpServletRequest,Model)
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	c.e.w.c.HelloController:
	{ [/test]}: test()
	{ [/hello]}: hello()
	{ [/thymeleafTest]}: thymeleafTest(Model)
	{ [/injectionTest]}: autowiredTest(Model)
	{ [/builderTest]}: builderTest(Model)
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	c.e.w.c.TokenController:
	{GET [/checkToken]}: checkToken(String)
	{GET [/tokenCreate/{userId}]}: createToken(String)
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	s.d.s.w.Swagger2ControllerWebMvc:
	{GET [/v2/api-docs], produces [application/json || application/hal+json]}: getDocumentation(String,HttpServletRequest)
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	s.d.s.w.ApiResourceController:
	{GET [/swagger-resources/configuration/security], produces [application/json]}: securityConfiguration()
	{GET [/swagger-resources], produces [application/json]}: swaggerResources()
	{GET [/swagger-resources/configuration/ui], produces [application/json]}: uiConfiguration()
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:295] - 
	s.d.o.w.OpenApiControllerWebMvc:
	{GET [/v3/api-docs], produces [application/json || application/hal+json]}: getDocumentation(String,HttpServletRequest)
DEBUG 22-12-09 13:41:43[restartedMain] [RequestMappingHandlerMapping:367] - 20 mappings in 'requestMappingHandlerMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'webMvcRequestHandlerProvider' via constructor to bean named 'methodResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'webMvcRequestHandlerProvider' via constructor to bean named 'requestMappingHandlerMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultResponseTypeReader'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'documentationPluginsBootstrapper'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaults'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pathProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'documentationPluginsManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'webMvcRequestHandlerProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'resourceGroupCache'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'apiDocumentationScanner'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'defaults'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'pathProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'environment'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'queryStringUriTemplateDecorator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pathMappingDecorator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pathSanitizer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationPathDecorator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jacksonJsonViewProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jacksonJsonViewProvider' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'propertyDiscriminatorBasedInheritancePlugin'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'propertyDiscriminatorBasedInheritancePlugin' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'propertyDiscriminatorBasedInheritancePlugin' via constructor to bean named 'jacksonEnumTypeDeterminer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'propertyDiscriminatorBasedInheritancePlugin' via constructor to bean named 'typeNameExtractor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'propertyDiscriminatorBasedInheritancePlugin' via constructor to bean named 'modelSpecificationFactory'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'xmlModelPlugin'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'xmlModelPlugin' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonIgnorePropertiesModelPlugin'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jsonIgnorePropertiesModelPlugin' via constructor to bean named 'typeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'xmlPropertyPlugin'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openApiControllerWebMvc'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'serviceModelToOpenApiMapperImpl'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'oasVendorExtensionsMapperImpl'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'oasLicenceMapper'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'examplesMapperImpl'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'oasSecurityMapperImpl'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'schemaMapperImpl'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'styleEnumMapperImpl'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'securitySchemeMapperImpl'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webMvcOpenApiTransformationFilterRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiControllerWebMvc' via constructor to bean named 'resourceGroupCache'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiControllerWebMvc' via constructor to bean named 'serviceModelToOpenApiMapperImpl'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiControllerWebMvc' via constructor to bean named 'jsonSerializer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'openApiControllerWebMvc' via constructor to bean named 'webMvcOpenApiTransformationFilterRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.swagger.configuration.SwaggerCommonConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.spring.web.SpringfoxWebMvcConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.swagger2.configuration.Swagger2WebMvcConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webMvcSwaggerTransformer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'webMvcSwaggerTransformer' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'taskExecutorBuilder'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'error'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'beanNameViewResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'conventionErrorViewResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'errorAttributes'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcValidator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'messageConverters'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'stringHttpMessageConverter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jacksonObjectMapper'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterNamesModule'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonComponentModule'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonMixinModule'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jacksonGeoModule'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'sortResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'sortCustomizer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pageableResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pageableCustomizer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'applicationTaskExecutor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
DEBUG 22-12-09 13:41:43[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'refreshScopeRefreshedEventListener'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'com.ulisesbocchio.jasyptspringboot.configuration.CachingConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'configPropsSingleton'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'configPropsSingleton' via factory method to bean named 'envCopy'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'refreshScopeRefreshedEventListener' via factory method to bean named 'environment'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'refreshScopeRefreshedEventListener' via factory method to bean named 'encryptablePropertySourceConverter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'refreshScopeRefreshedEventListener' via factory method to bean named 'configPropsSingleton'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'liveReloadServerEventListener'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'optionalLiveReloadServer'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
DEBUG 22-12-09 13:41:43[restartedMain] [LiveReloadServer:113] - Starting live reload server on port 35729
INFO  22-12-09 13:41:43[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
DEBUG 22-12-09 13:41:43[restartedMain] [RequestMappingHandlerAdapter:625] - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
INFO  22-12-09 13:41:43[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'localeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'themeResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'flashMapManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcPatternParser'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcUrlPathHelper'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcPathMatcher'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:177] - 'viewControllerHandlerMapping' {/swagger-ui/=ParameterizableViewController [view="forward:/swagger-ui/index.html"]}
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'beanNameHandlerMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:86] - 'beanNameHandlerMapping' {}
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'routerFunctionMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'resourceHandlerMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 22-12-09 13:41:43[restartedMain] [Mappings:177] - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]], /swagger-ui/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/springfox-swagger-ui/]]}
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'handlerFunctionAdapter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'handlerExceptionResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 22-12-09 13:41:43[restartedMain] [ExceptionHandlerExceptionResolver:307] - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcViewResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewNameTranslator'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultViewResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@76cc2041'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'thymeleafViewResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'templateEngine'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'templateEngine' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultTemplateResolver'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'java8TimeDialect'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'templateEngine'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'com.ulisesbocchio.jasyptspringboot.configuration.EnableEncryptablePropertiesConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'com.ulisesbocchio.jasyptspringbootstarter.JasyptSpringBootAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'applicationAvailability'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionManager'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'lifecycleProcessor'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcTemplate'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcMappingContext'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcCustomConversions'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcDialect'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcDialect' via factory method to bean named 'namedParameterJdbcTemplate'
DEBUG 22-12-09 13:41:43[restartedMain] [DataSourceUtils:116] - Fetching JDBC Connection from DataSource
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.sql.Timestamp to class java.time.LocalDateTime as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.sql.Timestamp to class java.time.LocalDate as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.LocalDate to class java.sql.Timestamp as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.sql.Timestamp to class java.time.LocalTime as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.LocalTime to class java.sql.Timestamp as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.sql.Timestamp to class java.time.Instant as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.Instant to class java.sql.Timestamp as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from interface org.springframework.data.jdbc.core.mapping.AggregateReference to class java.lang.Object as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.lang.Object to interface org.springframework.data.jdbc.core.mapping.AggregateReference as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.util.Date to class java.time.Instant as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.Instant to class java.util.Date as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.Duration to class java.lang.String as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.lang.String to class java.time.Duration as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.time.Period to class java.lang.String as writing converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.lang.String to class java.time.Period as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [CustomConversions:301] - Adding converter from class java.lang.String to class java.time.Instant as reading converter
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcMappingContext' via factory method to bean named 'jdbcCustomConversions'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcConverter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcMappingContext'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'namedParameterJdbcTemplate'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcCustomConversions'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcConverter' via factory method to bean named 'jdbcDialect'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcAggregateTemplate'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataAccessStrategyBean'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'namedParameterJdbcTemplate'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcConverter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcMappingContext'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'dataAccessStrategyBean' via factory method to bean named 'jdbcDialect'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d167741'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcMappingContext'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'jdbcConverter'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'jdbcAggregateTemplate' via factory method to bean named 'dataAccessStrategyBean'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration'
DEBUG 22-12-09 13:41:43[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration' via constructor to bean named 'spring.kafka-org.springframework.boot.autoconfigure.kafka.KafkaProperties'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaListenerContainerFactoryConfigurer'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaListenerContainerFactory'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'kafkaListenerContainerFactory' via factory method to bean named 'kafkaListenerContainerFactoryConfigurer'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaConsumerFactory'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'kafkaAdmin'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'taskScheduler'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'taskSchedulerBuilder'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'taskScheduler' via factory method to bean named 'taskSchedulerBuilder'
DEBUG 22-12-09 13:41:44[restartedMain] [ThreadPoolTaskScheduler:181] - Initializing ExecutorService 'taskScheduler'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionTemplate'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'multipartResolver'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'classPathRestartStrategy'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:808] - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.oas.configuration.OpenApiWebMvcConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webMvcOpenApiTransformer'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation.oas.configuration.OpenApiDocumentationConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.boot.starter.autoconfigure.OpenApiAutoConfiguration'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springfox.documentation-springfox.boot.starter.autoconfigure.SpringfoxConfigurationProperties'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:352] - Starting beans in phase -2147483647
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:184] - Successfully started bean 'springBootLoggingLifecycle'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:352] - Starting beans in phase 2147483547
INFO  22-12-09 13:41:44[restartedMain] [ConsumerConfig:376] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [192.168.111.128:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-testgroup-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = testgroup
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

DEBUG 22-12-09 13:41:44[restartedMain] [KafkaConsumer:695] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Initializing the Kafka consumer
INFO  22-12-09 13:41:44[restartedMain] [AppInfoParser:119] - Kafka version: 3.1.2
INFO  22-12-09 13:41:44[restartedMain] [AppInfoParser:120] - Kafka commitId: f8c67dc3ae0a3265
INFO  22-12-09 13:41:44[restartedMain] [AppInfoParser:121] - Kafka startTimeMs: 1670560904464
DEBUG 22-12-09 13:41:44[restartedMain] [KafkaConsumer:815] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Kafka consumer initialized
INFO  22-12-09 13:41:44[restartedMain] [KafkaConsumer:966] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Subscribed to topic(s): test
DEBUG 22-12-09 13:41:44[restartedMain] [ThreadPoolTaskScheduler:181] - Initializing ExecutorService
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:184] - Successfully started bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:352] - Starting beans in phase 2147483646
INFO  22-12-09 13:41:44[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["https-jsse-nio-8443"]
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:821] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FindCoordinator request to broker 192.168.111.128:9092 (id: -1 rack: null)
INFO  22-12-09 13:41:44[restartedMain] [AjpNioProtocol:173] - Starting ProtocolHandler ["ajp-nio-0.0.0.0-8009"]
INFO  22-12-09 13:41:44[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-12-09 13:41:44[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8443 (https) 8009 (http) 8080 (http) with context path ''
INFO  22-12-09 13:41:44[restartedMain] [RefreshScopeRefreshedEventListener:47] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  22-12-09 13:41:44[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source systemProperties refreshed
INFO  22-12-09 13:41:44[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source systemEnvironment refreshed
INFO  22-12-09 13:41:44[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source random refreshed
INFO  22-12-09 13:41:44[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' refreshed
INFO  22-12-09 13:41:44[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source devtools refreshed
INFO  22-12-09 13:41:44[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource server.ports [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:41:44[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  22-12-09 13:41:44[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:41:44[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:184] - Successfully started bean 'webServerStartStop'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:352] - Starting beans in phase 2147483647
DEBUG 22-12-09 13:41:44[restartedMain] [DocumentationPluginsBootstrapper:99] - Documentation plugins bootstrapped
DEBUG 22-12-09 13:41:44[restartedMain] [DocumentationPluginsBootstrapper:78] - Found 1 custom documentation plugin(s)
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:49] - Total number of request handlers 20
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /builderTest, WebMvcRequestHandler{requestMapping={ [/builderTest]}, handlerMethod=com.example.web.controller.HelloController#builderTest(Model), key=RequestHandlerKey{pathMappings=[/builderTest], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /checkToken, WebMvcRequestHandler{requestMapping={GET [/checkToken]}, handlerMethod=com.example.web.controller.TokenController#checkToken(String), key=RequestHandlerKey{pathMappings=[/checkToken], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /error, WebMvcRequestHandler{requestMapping={ [/error]}, handlerMethod=com.example.web.controller.CustomErrorController#handleError(HttpServletRequest, Model), key=RequestHandlerKey{pathMappings=[/error], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /hello, WebMvcRequestHandler{requestMapping={ [/hello]}, handlerMethod=com.example.web.controller.HelloController#hello(), key=RequestHandlerKey{pathMappings=[/hello], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /injectionTest, WebMvcRequestHandler{requestMapping={ [/injectionTest]}, handlerMethod=com.example.web.controller.HelloController#autowiredTest(Model), key=RequestHandlerKey{pathMappings=[/injectionTest], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /kafka/test/message, WebMvcRequestHandler{requestMapping={ [/kafka/test/message]}, handlerMethod=com.example.kafka.controller.KafkaController#sendMessage(String), key=RequestHandlerKey{pathMappings=[/kafka/test/message], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /memberTest, WebMvcRequestHandler{requestMapping={POST [/memberTest]}, handlerMethod=com.example.database.controller.JpaRestController#save(MemberVo), key=RequestHandlerKey{pathMappings=[/memberTest], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /memberTest, WebMvcRequestHandler{requestMapping={GET [/memberTest], produces [application/json]}, handlerMethod=com.example.database.controller.JpaRestController#getAllmembers(), key=RequestHandlerKey{pathMappings=[/memberTest], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[application/json]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /memberTest/saveMember, WebMvcRequestHandler{requestMapping={GET [/memberTest/saveMember]}, handlerMethod=com.example.database.controller.JpaRestController#save(HttpServletRequest, MemberVo), key=RequestHandlerKey{pathMappings=[/memberTest/saveMember], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /memberTest/{mbrNo}, WebMvcRequestHandler{requestMapping={DELETE [/memberTest/{mbrNo}], produces [application/json]}, handlerMethod=com.example.database.controller.JpaRestController#deleteMember(Long), key=RequestHandlerKey{pathMappings=[/memberTest/{mbrNo}], supportedMethods=[DELETE], supportedMediaTypes=[], producibleMediaTypes=[application/json]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /memberTest/{mbrNo}, WebMvcRequestHandler{requestMapping={GET [/memberTest/{mbrNo}], produces [application/json]}, handlerMethod=com.example.database.controller.JpaRestController#getMember(Long), key=RequestHandlerKey{pathMappings=[/memberTest/{mbrNo}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[application/json]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /memberTest/{mbrNo}, WebMvcRequestHandler{requestMapping={PUT [/memberTest/{mbrNo}], produces [application/json]}, handlerMethod=com.example.database.controller.JpaRestController#updateMember(Long, MemberVo), key=RequestHandlerKey{pathMappings=[/memberTest/{mbrNo}], supportedMethods=[PUT], supportedMediaTypes=[], producibleMediaTypes=[application/json]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /swagger-resources, WebMvcRequestHandler{requestMapping={GET [/swagger-resources], produces [application/json]}, handlerMethod=springfox.documentation.swagger.web.ApiResourceController#swaggerResources(), key=RequestHandlerKey{pathMappings=[/swagger-resources], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[application/json]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /swagger-resources/configuration/security, WebMvcRequestHandler{requestMapping={GET [/swagger-resources/configuration/security], produces [application/json]}, handlerMethod=springfox.documentation.swagger.web.ApiResourceController#securityConfiguration(), key=RequestHandlerKey{pathMappings=[/swagger-resources/configuration/security], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[application/json]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /swagger-resources/configuration/ui, WebMvcRequestHandler{requestMapping={GET [/swagger-resources/configuration/ui], produces [application/json]}, handlerMethod=springfox.documentation.swagger.web.ApiResourceController#uiConfiguration(), key=RequestHandlerKey{pathMappings=[/swagger-resources/configuration/ui], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[application/json]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /test, WebMvcRequestHandler{requestMapping={ [/test]}, handlerMethod=com.example.web.controller.HelloController#test(), key=RequestHandlerKey{pathMappings=[/test], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /thymeleafTest, WebMvcRequestHandler{requestMapping={ [/thymeleafTest]}, handlerMethod=com.example.web.controller.HelloController#thymeleafTest(Model), key=RequestHandlerKey{pathMappings=[/thymeleafTest], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /tokenCreate/{userId}, WebMvcRequestHandler{requestMapping={GET [/tokenCreate/{userId}]}, handlerMethod=com.example.web.controller.TokenController#createToken(String), key=RequestHandlerKey{pathMappings=[/tokenCreate/{userId}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /v2/api-docs, WebMvcRequestHandler{requestMapping={GET [/v2/api-docs], produces [application/json || application/hal+json]}, handlerMethod=springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest), key=RequestHandlerKey{pathMappings=[/v2/api-docs], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[application/json, application/hal+json]}}
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:52] - Adding key: /v3/api-docs, WebMvcRequestHandler{requestMapping={GET [/v3/api-docs], produces [application/json || application/hal+json]}, handlerMethod=springfox.documentation.oas.web.OpenApiControllerWebMvc#getDocumentation(String, HttpServletRequest), key=RequestHandlerKey{pathMappings=[/v3/api-docs], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[application/json, application/hal+json]}}
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ClientUtils:113] - Resolved host 192.168.111.128 as 192.168.111.128
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:989] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Initiating connection to node 192.168.111.128:9092 (id: -1 rack: null) using address /192.168.111.128
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultRequestHandlerCombiner:59] - Combined number of request handlers 20
DEBUG 22-12-09 13:41:44[restartedMain] [ApiListingReferenceScanner:44] - Scanning for api listing references
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Selector:531] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node -1
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:951] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Completed connection to node -1. Fetching API versions.
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:965] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Initiating API versions fetch from node -1.
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:184] - Successfully started bean 'documentationPluginsBootstrapper'
INFO  22-12-09 13:41:44[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  22-12-09 13:41:44[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:184] - Successfully started bean 'quartzScheduler'
DEBUG 22-12-09 13:41:44[restartedMain] [DefaultLifecycleProcessor:184] - Successfully started bean 'webServerGracefulShutdown'
DEBUG 22-12-09 13:41:44[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
DEBUG 22-12-09 13:41:44[restartedMain] [ConditionEvaluationReportLoggingListener:126] - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations', 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jdbc.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations,org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found beans 'transactionManager', 'namedParameterJdbcTemplate' (OnBeanCondition)

   JdbcRepositoriesAutoConfiguration.JdbcRepositoriesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.repository.config.JdbcRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory matched:
      - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration matched:
      - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   OpenApiAutoConfiguration matched:
      - @ConditionalOnProperty (springfox.documentation.enabled=true) matched (OnPropertyCondition)

   OpenApiControllerWebMvc matched:
      - found 'session' scope (OnWebApplicationCondition)

   OpenApiWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   QuartzAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.quartz.Scheduler', 'org.springframework.scheduling.quartz.SchedulerFactoryBean', 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   QuartzAutoConfiguration#quartzScheduler matched:
      - @ConditionalOnMissingBean (types: org.springframework.scheduling.quartz.SchedulerFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringfoxWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   Swagger2ControllerWebMvc matched:
      - found 'session' scope (OnWebApplicationCondition)

   Swagger2WebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SwaggerUiWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springfox.documentation.swagger-ui.enabled=true) matched (OnPropertyCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TemplateEngineConfigurations.DefaultTemplateEngineConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcRequestHandlerProvider matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BeanValidatorPluginsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorMvcAutoConfiguration#basicErrorController:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) found beans of type 'org.springframework.boot.web.servlet.error.ErrorController' customErrorController (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaRetryTopicConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.retry.topic.enabled) did not find property 'spring.kafka.retry.topic.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   OpenApiControllerWebFlux:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   OpenApiWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration.JdbcStoreTypeConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.quartz.job-store-type=jdbc) did not find property 'job-store-type' (OnPropertyCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) found beans of type 'org.springframework.boot.web.servlet.server.ServletWebServerFactory' servletContainer (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataRestConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)

   SpringfoxWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   Swagger2ControllerWebFlux:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   Swagger2WebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SwaggerUiWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   TemplateEngineConfigurations.ReactiveTemplateEngineConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect', 'org.springframework.security.web.server.csrf.CsrfToken' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxRequestHandlerProvider:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    com.ulisesbocchio.jasyptspringbootstarter.JasyptSpringBootAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-testgroup-1, correlationId=1) and timeout 30000 to node -1: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.1.2')
INFO  22-12-09 13:41:44[restartedMain] [HelloWorldSpringBootApplication:61] - Started HelloWorldSpringBootApplication in 8.57 seconds (JVM running for 9.094)
DEBUG 22-12-09 13:41:44[restartedMain] [ApplicationAvailabilityBean:77] - Application availability state LivenessState changed to CORRECT
DEBUG 22-12-09 13:41:44[restartedMain] [Restarter:252] - Creating new Restarter for thread Thread[main,5,main]
DEBUG 22-12-09 13:41:44[restartedMain] [Restarter:252] - Immediately restarting application
DEBUG 22-12-09 13:41:44[restartedMain] [Restarter:252] - Starting application com.example.HelloWorldSpringBootApplication with URLs [file:/C:/Users/user/IdeaProjects/HelloWorld-SpringBoot/build/classes/java/main/, file:/C:/Users/user/IdeaProjects/HelloWorld-SpringBoot/build/resources/main/]
DEBUG 22-12-09 13:41:44[restartedMain] [ApplicationAvailabilityBean:77] - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received API_VERSIONS response from node -1 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-testgroup-1, correlationId=1): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=13), ApiVersion(apiKey=2, minVersion=0, maxVersion=7), ApiVersion(apiKey=3, minVersion=0, maxVersion=12), ApiVersion(apiKey=4, minVersion=0, maxVersion=6), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=8), ApiVersion(apiKey=10, minVersion=0, maxVersion=4), ApiVersion(apiKey=11, minVersion=0, maxVersion=9), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=5), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=3), ApiVersion(apiKey=30, minVersion=0, maxVersion=3), ApiVersion(apiKey=31, minVersion=0, maxVersion=3), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=4), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=3), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=3), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=2), ApiVersion(apiKey=57, minVersion=0, maxVersion=1), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0), ApiVersion(apiKey=65, minVersion=0, maxVersion=0), ApiVersion(apiKey=66, minVersion=0, maxVersion=0), ApiVersion(apiKey=67, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:921] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 13 [usable: 13], ListOffsets(2): 0 to 7 [usable: 7], Metadata(3): 0 to 12 [usable: 12], LeaderAndIsr(4): 0 to 6 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 8 [usable: 8], FindCoordinator(10): 0 to 4 [usable: 4], JoinGroup(11): 0 to 9 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 5 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 3 [usable: 2], CreateAcls(30): 0 to 3 [usable: 2], DeleteAcls(31): 0 to 3 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 4 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 3 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 3 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 to 2 [usable: 0], UpdateFeatures(57): 0 to 1 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0], DescribeTransactions(65): 0 [usable: 0], ListTransactions(66): 0 [usable: 0], AllocateProducerIds(67): 0 [usable: 0]).
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1143] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 192.168.111.128:9092 (id: -1 rack: null)
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=12, clientId=consumer-testgroup-1, correlationId=2) and timeout 30000 to node -1: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
DEBUG 22-12-09 13:41:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=4, clientId=consumer-testgroup-1, correlationId=0) and timeout 30000 to node -1: FindCoordinatorRequestData(key='', keyType=0, coordinatorKeys=[testgroup])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received METADATA response from node -1 for request with header RequestHeader(apiKey=METADATA, apiVersion=12, clientId=consumer-testgroup-1, correlationId=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='192.168.111.128', port=9092, rack=null)], clusterId='ctFtvzn_QjacTeFypCnKVw', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=GsIna2TrQ6GXdWjajJ1NkQ, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=0, leaderEpoch=0, replicaNodes=[0], isrNodes=[0], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:402] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Resetting the last seen epoch of partition test-0 to 0 since the associated topicId changed from null to GsIna2TrQ6GXdWjajJ1NkQ
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:287] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Cluster ID: ctFtvzn_QjacTeFypCnKVw
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:291] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Updated cluster metadata updateVersion 2 to MetadataCache{clusterId='ctFtvzn_QjacTeFypCnKVw', nodes={0=192.168.111.128:9092 (id: 0 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[0], leaderEpoch=Optional[0], replicas=0, isr=0, offlineReplicas=)], controller=192.168.111.128:9092 (id: 0 rack: null)}
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FIND_COORDINATOR response from node -1 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=4, clientId=consumer-testgroup-1, correlationId=0): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=0, errorMessage='', nodeId=0, host='', port=0, coordinators=[Coordinator(key='testgroup', nodeId=0, host='192.168.111.128', port=9092, errorCode=0, errorMessage='')])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:834] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FindCoordinator response ClientResponse(receivedTimeMs=1670560905012, latencyMs=172, disconnected=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=4, clientId=consumer-testgroup-1, correlationId=0), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=0, errorMessage='', nodeId=0, host='', port=0, coordinators=[Coordinator(key='testgroup', nodeId=0, host='192.168.111.128', port=9092, errorCode=0, errorMessage='')]))
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:853] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Discovered group coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ClientUtils:113] - Resolved host 192.168.111.128 as 192.168.111.128
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:989] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Initiating connection to node 192.168.111.128:9092 (id: 2147483647 rack: null) using address /192.168.111.128
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:707] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Executing onJoinPrepare with generation -1 and memberId 
DEBUG 22-12-09 13:41:45[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1367] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Heartbeat thread started
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:535] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] (Re-)joining group
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:219] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Joining group with current subscription: [test]
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:547] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending JoinGroup (JoinGroupRequestData(groupId='testgroup', sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, memberId='', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0]), JoinGroupRequestProtocol(name='cooperative-sticky', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 4, -1, -1, -1, -1, 0, 0, 0, 0])])) to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Selector:531] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 2147483647
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:951] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Completed connection to node 2147483647. Fetching API versions.
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:965] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Initiating API versions fetch from node 2147483647.
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-testgroup-1, correlationId=4) and timeout 30000 to node 2147483647: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.1.2')
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received API_VERSIONS response from node 2147483647 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-testgroup-1, correlationId=4): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=13), ApiVersion(apiKey=2, minVersion=0, maxVersion=7), ApiVersion(apiKey=3, minVersion=0, maxVersion=12), ApiVersion(apiKey=4, minVersion=0, maxVersion=6), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=8), ApiVersion(apiKey=10, minVersion=0, maxVersion=4), ApiVersion(apiKey=11, minVersion=0, maxVersion=9), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=5), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=3), ApiVersion(apiKey=30, minVersion=0, maxVersion=3), ApiVersion(apiKey=31, minVersion=0, maxVersion=3), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=4), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=3), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=3), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=2), ApiVersion(apiKey=57, minVersion=0, maxVersion=1), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0), ApiVersion(apiKey=65, minVersion=0, maxVersion=0), ApiVersion(apiKey=66, minVersion=0, maxVersion=0), ApiVersion(apiKey=67, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:921] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 2147483647 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 13 [usable: 13], ListOffsets(2): 0 to 7 [usable: 7], Metadata(3): 0 to 12 [usable: 12], LeaderAndIsr(4): 0 to 6 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 8 [usable: 8], FindCoordinator(10): 0 to 4 [usable: 4], JoinGroup(11): 0 to 9 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 5 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 3 [usable: 2], CreateAcls(30): 0 to 3 [usable: 2], DeleteAcls(31): 0 to 3 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 4 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 3 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 3 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 to 2 [usable: 0], UpdateFeatures(57): 0 to 1 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0], DescribeTransactions(65): 0 [usable: 0], ListTransactions(66): 0 [usable: 0], AllocateProducerIds(67): 0 [usable: 0]).
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending JOIN_GROUP request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-testgroup-1, correlationId=3) and timeout 305000 to node 2147483647: JoinGroupRequestData(groupId='testgroup', sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, memberId='', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0]), JoinGroupRequestProtocol(name='cooperative-sticky', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 4, -1, -1, -1, -1, 0, 0, 0, 0])])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received JOIN_GROUP response from node 2147483647 for request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-testgroup-1, correlationId=3): JoinGroupResponseData(throttleTimeMs=0, errorCode=79, generationId=-1, protocolType=null, protocolName=null, leader='', memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', members=[])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:654] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] JoinGroup failed due to non-fatal error: MEMBER_ID_REQUIRED Will set the member id as consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 and then rejoin. Sent generation was  Generation{generationId=-1, memberId='', protocol='null'}
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1000] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Request joining group due to: need to re-join with the given member-id
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:535] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] (Re-)joining group
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:219] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Joining group with current subscription: [test]
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:547] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending JoinGroup (JoinGroupRequestData(groupId='testgroup', sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0]), JoinGroupRequestProtocol(name='cooperative-sticky', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 4, -1, -1, -1, -1, 0, 0, 0, 0])])) to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending JOIN_GROUP request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-testgroup-1, correlationId=5) and timeout 305000 to node 2147483647: JoinGroupRequestData(groupId='testgroup', sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0]), JoinGroupRequestProtocol(name='cooperative-sticky', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 4, -1, -1, -1, -1, 0, 0, 0, 0])])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received JOIN_GROUP response from node 2147483647 for request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-testgroup-1, correlationId=5): JoinGroupResponseData(throttleTimeMs=0, errorCode=0, generationId=1, protocolType='consumer', protocolName='range', leader='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', members=[JoinGroupResponseMember(memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null, metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:575] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful JoinGroup response: JoinGroupResponseData(throttleTimeMs=0, errorCode=0, generationId=1, protocolType='consumer', protocolName='range', leader='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', members=[JoinGroupResponseMember(memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null, metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1335] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Enabling heartbeat thread
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:595] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Successfully joined group with generation Generation{generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', protocol='range'}
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:645] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Performing assignment using strategy range with subscriptions {consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34=Subscription(topics=[test], ownedPartitions=[], groupInstanceId=null)}
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:659] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Finished assignment for group at generation 1: {consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34=Assignment(partitions=[test-0])}
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:716] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending leader SyncGroup to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null) at generation Generation{generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', protocol='range'}: SyncGroupRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null, protocolType='consumer', protocolName='range', assignments=[SyncGroupRequestAssignment(memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])])
DEBUG 22-12-09 13:41:45[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending SYNC_GROUP request with header RequestHeader(apiKey=SYNC_GROUP, apiVersion=5, clientId=consumer-testgroup-1, correlationId=6) and timeout 30000 to node 2147483647: SyncGroupRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null, protocolType='consumer', protocolName='range', assignments=[SyncGroupRequestAssignment(memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received SYNC_GROUP response from node 2147483647 for request with header RequestHeader(apiKey=SYNC_GROUP, apiVersion=5, clientId=consumer-testgroup-1, correlationId=6): SyncGroupResponseData(throttleTimeMs=0, errorCode=0, protocolType='consumer', protocolName='range', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:745] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful SyncGroup response: SyncGroupResponseData(throttleTimeMs=0, errorCode=0, protocolType='consumer', protocolName='range', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:761] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Successfully synced group in generation Generation{generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', protocol='range'}
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:353] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Executing onJoinComplete with generation 1 and memberId consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:280] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Notifying assignor about the new Assignment(partitions=[test-0])
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:292] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Adding newly assigned partitions: test-0
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1337] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Fetching committed offsets for partitions: [test-0]
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending OFFSET_FETCH request with header RequestHeader(apiKey=OFFSET_FETCH, apiVersion=8, clientId=consumer-testgroup-1, correlationId=7) and timeout 30000 to node 2147483647: OffsetFetchRequestData(groupId='', topics=[], groups=[OffsetFetchRequestGroup(groupId='testgroup', topics=[OffsetFetchRequestTopics(name='test', partitionIndexes=[0])])], requireStable=true)
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received OFFSET_FETCH response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_FETCH, apiVersion=8, clientId=consumer-testgroup-1, correlationId=7): OffsetFetchResponseData(throttleTimeMs=0, topics=[], errorCode=0, groups=[OffsetFetchResponseGroup(groupId='testgroup', topics=[OffsetFetchResponseTopics(name='test', partitions=[OffsetFetchResponsePartitions(partitionIndex=0, committedOffset=-1, committedLeaderEpoch=-1, metadata='', errorCode=0)])], errorCode=0)])
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1405] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Found no committed offset for partition test-0
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1029] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending ListOffsetRequest ListOffsetsRequestData(replicaId=-1, isolationLevel=0, topics=[ListOffsetsTopic(name='test', partitions=[ListOffsetsPartition(partitionIndex=0, currentLeaderEpoch=0, timestamp=-2, maxNumOffsets=1)])]) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ClientUtils:113] - Resolved host 192.168.111.128 as 192.168.111.128
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:989] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Initiating connection to node 192.168.111.128:9092 (id: 0 rack: null) using address /192.168.111.128
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Selector:531] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 0
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:951] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Completed connection to node 0. Fetching API versions.
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:965] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Initiating API versions fetch from node 0.
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-testgroup-1, correlationId=9) and timeout 30000 to node 0: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.1.2')
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received API_VERSIONS response from node 0 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-testgroup-1, correlationId=9): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=13), ApiVersion(apiKey=2, minVersion=0, maxVersion=7), ApiVersion(apiKey=3, minVersion=0, maxVersion=12), ApiVersion(apiKey=4, minVersion=0, maxVersion=6), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=8), ApiVersion(apiKey=10, minVersion=0, maxVersion=4), ApiVersion(apiKey=11, minVersion=0, maxVersion=9), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=5), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=3), ApiVersion(apiKey=30, minVersion=0, maxVersion=3), ApiVersion(apiKey=31, minVersion=0, maxVersion=3), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=4), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=3), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=3), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=2), ApiVersion(apiKey=57, minVersion=0, maxVersion=1), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0), ApiVersion(apiKey=65, minVersion=0, maxVersion=0), ApiVersion(apiKey=66, minVersion=0, maxVersion=0), ApiVersion(apiKey=67, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:921] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 13 [usable: 13], ListOffsets(2): 0 to 7 [usable: 7], Metadata(3): 0 to 12 [usable: 12], LeaderAndIsr(4): 0 to 6 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 8 [usable: 8], FindCoordinator(10): 0 to 4 [usable: 4], JoinGroup(11): 0 to 9 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 5 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 3 [usable: 2], CreateAcls(30): 0 to 3 [usable: 2], DeleteAcls(31): 0 to 3 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 4 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 3 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 3 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 to 2 [usable: 0], UpdateFeatures(57): 0 to 1 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0], DescribeTransactions(65): 0 [usable: 0], ListTransactions(66): 0 [usable: 0], AllocateProducerIds(67): 0 [usable: 0]).
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending LIST_OFFSETS request with header RequestHeader(apiKey=LIST_OFFSETS, apiVersion=7, clientId=consumer-testgroup-1, correlationId=8) and timeout 30000 to node 0: ListOffsetsRequestData(replicaId=-1, isolationLevel=0, topics=[ListOffsetsTopic(name='test', partitions=[ListOffsetsPartition(partitionIndex=0, currentLeaderEpoch=0, timestamp=-2, maxNumOffsets=1)])])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received LIST_OFFSETS response from node 0 for request with header RequestHeader(apiKey=LIST_OFFSETS, apiVersion=7, clientId=consumer-testgroup-1, correlationId=8): ListOffsetsResponseData(throttleTimeMs=0, topics=[ListOffsetsTopicResponse(name='test', partitions=[ListOffsetsPartitionResponse(partitionIndex=0, errorCode=0, oldStyleOffsets=[], timestamp=-1, offset=0, leaderEpoch=0)])])
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1081] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Handling ListOffsetResponse response for test-0. Fetched offset 0, timestamp -1
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:184] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Not replacing existing epoch 0 with new epoch 0 for partition test-0
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [SubscriptionState:398] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Resetting offset for partition test-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}}.
INFO  22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - testgroup: partitions assigned: [test-0]
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built full fetch (sessionId=INVALID, epoch=INITIAL) for node 0 with 1 partition(s).
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED FullFetchRequest(toSend=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=10) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=0, sessionEpoch=0, topics=[FetchTopic(topic='test', topicId=GsIna2TrQ6GXdWjajJ1NkQ, partitions=[FetchPartition(partition=0, currentLeaderEpoch=0, fetchOffset=0, lastFetchedEpoch=-1, logStartOffset=-1, partitionMaxBytes=1048576)])], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=10): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[FetchableTopicResponse(topic='', topicId=GsIna2TrQ6GXdWjajJ1NkQ, partitions=[PartitionData(partitionIndex=0, errorCode=0, highWatermark=0, lastStableOffset=0, logStartOffset=0, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, records=MemoryRecords(size=0, buffer=java.nio.HeapByteBuffer[pos=0 lim=0 cap=3]))])])
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:561] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent a full fetch response that created a new incremental fetch session 1857037461 with 1 response partition(s)
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:326] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Fetch READ_UNCOMMITTED at offset 0 for partition test-0 returned fetch data PartitionData(partitionIndex=0, errorCode=0, highWatermark=0, lastStableOffset=0, logStartOffset=0, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, records=MemoryRecords(size=0, buffer=java.nio.HeapByteBuffer[pos=0 lim=0 cap=3]))
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=1) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=11) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=1, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=11): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=2) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=12) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=2, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=12): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=3) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=13) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=3, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=13): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=4) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=14) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=4, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:48[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:41:48[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=15) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:41:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=15): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:41:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:41:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=14): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=5) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=16) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=5, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=16): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=6) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=17) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=6, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=17): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=7) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=18) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=7, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:50[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
DEBUG 22-12-09 13:41:50[quartzScheduler_Worker-1] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
INFO  22-12-09 13:41:50[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=18): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=8) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=19) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=8, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=19): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=9) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=20) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=9, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:51[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:41:51[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=21) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=21): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=20): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=10) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=22) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=10, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=22): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=11) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=23) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=11, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=23): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=12) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=24) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=12, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=24): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=13) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=25) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=13, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=25): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=14) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=26) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=14, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=26): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=15) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=27) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=15, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:54[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:41:54[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=28) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=28): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=27): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=16) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=29) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=16, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=29): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=17) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=30) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=17, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=30): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=18) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=31) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=18, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=31): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=19) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=32) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=19, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=32): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=20) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=33) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=20, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:57[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:41:57[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=34) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=34): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=33): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=21) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=35) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=21, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=35): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=22) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=36) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=22, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=36): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=23) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=37) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=23, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=37): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=24) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=38) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=24, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=38): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=25) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=39) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=25, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=39): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=26) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:41:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=40) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=26, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:00[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
DEBUG 22-12-09 13:42:00[quartzScheduler_Worker-2] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
INFO  22-12-09 13:42:00[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:42:00[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:00[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=41) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=41): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=40): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=27) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=42) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=27, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=42): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=28) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=43) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=28, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=43): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=29) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=44) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=29, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=44): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=30) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=45) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=30, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=45): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=31) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=46) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=31, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:03[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:03[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=47) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=47): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=46): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=32) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=48) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=32, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=48): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=33) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=49) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=33, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=49): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=34) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=50) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=34, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=50): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=35) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=51) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=35, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=51): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=36) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=52) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=36, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=52): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=37) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=53) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=37, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:06[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:06[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=54) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=54): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=53): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=38) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=55) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=38, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=55): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=39) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=56) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=39, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=56): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=40) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=57) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=40, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=57): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=41) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=58) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=41, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=58): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=42) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=59) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=42, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:09[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:09[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=60) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=60): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=59): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=43) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=61) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=43, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=61): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=44) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=62) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=44, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:10[quartzScheduler_Worker-3] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
DEBUG 22-12-09 13:42:10[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
INFO  22-12-09 13:42:10[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=62): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=45) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=63) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=45, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:10[HikariPool-1 housekeeper] [HikariPool:421] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 22-12-09 13:42:10[HikariPool-1 housekeeper] [HikariPool:518] - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=63): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=46) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=64) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=46, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=64): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=47) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=65) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=47, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=65): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=48) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=66) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=48, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:12[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:12[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=67) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=67): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=66): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=49) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=68) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=49, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=68): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=50) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=69) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=50, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=69): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=51) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=70) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=51, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=70): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=52) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=71) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=52, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=71): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=53) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=72) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=53, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=72): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=54) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=73) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=54, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:15[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:15[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=74) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=74): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=73): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=55) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=75) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=55, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=75): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=56) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=76) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=56, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=76): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=57) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=77) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=57, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=77): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=58) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=78) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=58, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=78): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=59) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=79) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=59, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:18[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:18[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=80) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=79): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=60) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=81) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=60, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=80): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=81): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=61) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=82) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=61, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=82): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=62) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=83) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=62, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=83): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=63) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=84) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=63, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:20[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
DEBUG 22-12-09 13:42:20[quartzScheduler_Worker-4] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
INFO  22-12-09 13:42:20[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=84): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=64) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=85) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=64, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=85): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=65) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=86) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=65, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:21[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:21[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=87) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=87): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=86): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=66) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=88) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=66, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=88): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=67) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=89) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=67, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=89): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=68) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=90) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=68, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=90): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=69) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=91) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=69, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=91): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=70) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=92) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=70, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=92): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=71) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=93) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=71, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:24[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:24[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=94) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=94): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=93): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=72) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=95) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=72, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=95): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=73) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=96) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=73, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=96): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=74) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=97) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=74, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=97): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=75) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=98) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=75, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=98): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=76) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=99) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=76, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=99): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=77) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=100) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=77, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:27[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:27[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=101) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=101): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=100): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=78) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=102) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=78, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=102): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=79) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=103) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=79, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=103): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=80) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=104) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=80, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=104): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=81) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=105) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=81, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=105): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=82) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=106) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=82, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=106): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=83) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=107) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=83, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:30[quartzScheduler_Worker-5] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
DEBUG 22-12-09 13:42:30[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
INFO  22-12-09 13:42:30[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:42:30[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:30[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=108) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=108): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=107): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=84) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=109) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=84, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=109): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=85) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=110) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=85, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=110): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=86) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=111) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=86, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=111): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=87) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=112) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=87, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=112): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=88) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=113) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=88, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=113): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=89) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=114) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=89, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:33[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:33[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=115) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=115): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=114): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=90) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=116) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=90, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=116): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=91) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=117) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=91, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=117): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=92) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=118) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=92, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=118): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=93) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=119) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=93, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=119): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=94) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=120) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=94, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=120): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=95) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=121) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=95, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:36[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:36[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=122) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=122): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=121): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=96) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=123) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=96, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=123): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=97) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=124) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=97, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=124): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=98) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=125) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=98, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=125): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=99) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=126) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=99, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=126): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=100) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=127) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=100, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=127): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=101) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=128) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=101, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:39[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:39[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=129) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=129): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=128): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=102) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=130) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=102, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:40[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
DEBUG 22-12-09 13:42:40[quartzScheduler_Worker-6] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
INFO  22-12-09 13:42:40[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=130): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=103) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=131) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=103, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:40[HikariPool-1 housekeeper] [HikariPool:421] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 22-12-09 13:42:40[HikariPool-1 housekeeper] [HikariPool:518] - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=131): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=104) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=132) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=104, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=132): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=105) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=133) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=105, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=133): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=106) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=134) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=106, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:42[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:42[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=135) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=135): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=134): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=107) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=136) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=107, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=136): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=108) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=137) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=108, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=137): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=109) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=138) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=109, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=138): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=110) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=139) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=110, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=139): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=111) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=140) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=111, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=140): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=112) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=141) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=112, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:45[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:45[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=142) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=142): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=141): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=113) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=143) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=113, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=143): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=114) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=144) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=114, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=144): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=115) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=145) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=115, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=145): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=116) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=146) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=116, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=146): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=117) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=147) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=117, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=147): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=118) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=148) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=118, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:48[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:48[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=149) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=149): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=148): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=119) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=150) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=119, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=150): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=120) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=151) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=120, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=151): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=121) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=152) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=121, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=152): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=122) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=153) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=122, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:50[quartzScheduler_Worker-7] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
DEBUG 22-12-09 13:42:50[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
INFO  22-12-09 13:42:50[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=153): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=123) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=154) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=123, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=154): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=124) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=155) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=124, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:51[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:51[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=156) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=156): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=155): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=125) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=157) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=125, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=157): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=126) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=158) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=126, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=158): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=127) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=159) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=127, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=159): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=128) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=160) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=128, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=160): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=129) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=161) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=129, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=161): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=130) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=162) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=130, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:54[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:54[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=163) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=163): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=162): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=131) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=164) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=131, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=164): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=132) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=165) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=132, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=165): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=133) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=166) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=133, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=166): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=134) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=167) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=134, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=167): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=135) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=168) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=135, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:57[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:42:57[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=169) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=169): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=168): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=136) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=170) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=136, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=170): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=137) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=171) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=137, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=171): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=138) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=172) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=138, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=172): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=139) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=173) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=139, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:42:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:42:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:42:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=173): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:42:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:42:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=140) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:42:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:42:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=174) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=140, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:00[quartzScheduler_Worker-8] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
DEBUG 22-12-09 13:43:00[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
INFO  22-12-09 13:43:00[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=174): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=141) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=175) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=141, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:00[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:00[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=176) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=176): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=175): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=142) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=177) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=142, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=177): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=143) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=178) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=143, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=178): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=144) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=179) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=144, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=179): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=145) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=180) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=145, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=180): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=146) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=181) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=146, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:03[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:03[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=182) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=182): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=181): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=147) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=183) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=147, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=183): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=148) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=184) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=148, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=184): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=149) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=185) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=149, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=185): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=150) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=186) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=150, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=186): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=151) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=187) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=151, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=187): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=152) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=188) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=152, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:06[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:06[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=189) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=189): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=188): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=153) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=190) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=153, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=190): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=154) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=191) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=154, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=191): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=155) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=192) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=155, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=192): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=156) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=193) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=156, topics=[], forgottenTopicsData=[], rackId='')
INFO  22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:521] - Detected StandardServletMultipartResolver
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:545] - Detected AcceptHeaderLocaleResolver
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:570] - Detected FixedThemeResolver
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:720] - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4ffcdf80
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:784] - Detected org.springframework.web.servlet.support.SessionFlashMapManager@cf67dc6
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:542] - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
INFO  22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:547] - Completed initialization in 3 ms
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [DispatcherServlet:119] - GET "/test", parameters={}
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [RequestMappingHandlerMapping:522] - Mapped to com.example.web.controller.HelloController#test()
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [OpenEntityManagerInViewInterceptor:86] - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [HelloController:42] - log test
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [ContentNegotiatingViewResolver:349] - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [JstlView:309] - View name 'test', model {name=test, list=[a, b, c]}
DEBUG 22-12-09 13:43:08[https-jsse-nio-8443-exec-8] [JstlView:169] - Forwarding to [/WEB-INF/jsp/test.jsp]
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=193): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=157) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=194) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=157, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:09[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:09[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=195) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=195): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=194): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=158) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=196) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=158, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=196): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=159) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=197) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=159, topics=[], forgottenTopicsData=[], rackId='')
WARN  22-12-09 13:43:09[https-jsse-nio-8443-exec-8] [SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [102] milliseconds.
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-8] [OpenEntityManagerInViewInterceptor:111] - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-8] [DispatcherServlet:1131] - Completed 200 OK
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [DispatcherServlet:119] - GET "/favicon.ico", parameters={}
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [SimpleUrlHandlerMapping:522] - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [OpenEntityManagerInViewInterceptor:86] - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [ResourceHttpRequestHandler:560] - Resource not found
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [OpenEntityManagerInViewInterceptor:111] - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [DispatcherServlet:1131] - Completed 404 NOT_FOUND
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [DispatcherServlet:119] - "ERROR" dispatch for GET "/error", parameters={}
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [RequestMappingHandlerMapping:522] - Mapped to com.example.web.controller.CustomErrorController#handleError(HttpServletRequest, Model)
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [OpenEntityManagerInViewInterceptor:86] - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [CustomErrorController:34] - httpStatus : 404
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [ContentNegotiatingViewResolver:349] - Selected '*/*' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8]
DEBUG 22-12-09 13:43:09[https-jsse-nio-8443-exec-6] [TemplateEngine:325] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
DEBUG 22-12-09 13:43:10[quartzScheduler_Worker-9] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
DEBUG 22-12-09 13:43:10[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
INFO  22-12-09 13:43:10[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:43:10[https-jsse-nio-8443-exec-6] [CONFIG:158] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.15.RELEASE (built 2022-01-31T00:00:31+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@44e9b0a6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@83ad294
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1316ffa8
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
DEBUG 22-12-09 13:43:10[https-jsse-nio-8443-exec-6] [TemplateEngine:348] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=197): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=160) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=198) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=160, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:10[https-jsse-nio-8443-exec-6] [OpenEntityManagerInViewInterceptor:111] - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 22-12-09 13:43:10[https-jsse-nio-8443-exec-6] [DispatcherServlet:1127] - Exiting from "ERROR" dispatch, status 404
DEBUG 22-12-09 13:43:10[HikariPool-1 housekeeper] [HikariPool:421] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 22-12-09 13:43:10[HikariPool-1 housekeeper] [HikariPool:518] - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=198): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=161) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=199) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=161, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=199): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=162) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=200) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=162, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=200): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=163) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=201) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=163, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:12[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:12[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=202) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=202): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=201): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=164) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=203) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=164, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=203): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=165) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=204) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=165, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:13[https-jsse-nio-8443-exec-10] [DispatcherServlet:119] - GET "/thymeleafTest", parameters={}
DEBUG 22-12-09 13:43:13[https-jsse-nio-8443-exec-10] [RequestMappingHandlerMapping:522] - Mapped to com.example.web.controller.HelloController#thymeleafTest(Model)
DEBUG 22-12-09 13:43:13[https-jsse-nio-8443-exec-10] [OpenEntityManagerInViewInterceptor:86] - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 22-12-09 13:43:13[https-jsse-nio-8443-exec-10] [ContentNegotiatingViewResolver:349] - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
DEBUG 22-12-09 13:43:13[https-jsse-nio-8443-exec-10] [OpenEntityManagerInViewInterceptor:111] - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 22-12-09 13:43:13[https-jsse-nio-8443-exec-10] [DispatcherServlet:1131] - Completed 200 OK
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=204): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=166) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=205) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=166, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=205): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=167) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=206) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=167, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=206): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=168) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=207) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=168, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:15[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:15[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=208) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=208): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=207): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=169) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=209) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=169, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=209): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=170) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=210) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=170, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=210): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=171) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=211) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=171, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=211): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=172) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=212) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=172, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=212): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=173) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=213) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=173, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=213): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=174) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=214) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=174, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:18[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:18[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=215) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=215): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=214): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=175) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=216) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=175, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=216): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=176) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=217) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=176, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=217): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=177) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=218) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=177, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=218): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=178) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=219) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=178, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:20[quartzScheduler_Worker-10] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
DEBUG 22-12-09 13:43:20[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
INFO  22-12-09 13:43:20[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=219): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=179) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=220) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=179, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=220): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=180) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=221) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=180, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:21[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:21[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=222) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=222): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=221): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=181) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=223) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=181, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=223): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=182) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=224) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=182, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=224): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=183) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=225) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=183, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=225): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=184) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=226) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=184, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=226): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=185) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=227) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=185, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=227): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=186) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=228) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=186, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:24[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:24[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=229) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=229): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=228): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=187) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=230) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=187, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=230): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=188) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=231) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=188, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=231): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=189) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=232) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=189, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=232): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=190) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=233) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=190, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=233): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=191) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=234) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=191, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=234): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=192) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=235) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=192, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:27[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:27[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=236) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=236): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=235): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=193) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=237) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=193, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=237): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=194) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=238) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=194, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=238): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=195) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=239) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=195, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=239): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=196) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=240) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=196, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=240): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=197) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=241) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=197, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:30[quartzScheduler_Worker-1] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
DEBUG 22-12-09 13:43:30[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
INFO  22-12-09 13:43:30[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=241): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=198) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=242) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=198, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:30[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:30[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=243) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=243): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=242): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=199) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=244) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=199, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=244): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=200) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=245) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=200, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=245): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=201) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=246) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=201, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=246): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=202) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=247) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=202, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=247): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=203) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=248) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=203, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=248): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=204) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=249) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=204, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:33[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:33[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=250) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=250): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=249): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=205) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=251) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=205, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=251): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=206) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=252) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=206, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=252): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=207) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=253) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=207, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=253): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=208) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=254) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=208, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=254): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=209) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=255) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=209, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=255): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=210) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=256) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=210, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:36[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:36[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=257) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=257): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=256): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=211) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=258) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=211, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=258): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=212) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=259) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=212, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=259): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=213) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=260) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=213, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=260): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=214) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=261) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=214, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=261): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=215) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=262) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=215, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=262): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=216) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=263) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=216, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:39[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:39[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=264) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=264): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=263): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=217) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=265) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=217, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:40[quartzScheduler_Worker-2] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
INFO  22-12-09 13:43:40[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:43:40[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=265): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=218) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=266) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=218, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=266): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=219) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=267) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=219, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:40[HikariPool-1 housekeeper] [HikariPool:421] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 22-12-09 13:43:40[HikariPool-1 housekeeper] [HikariPool:518] - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=267): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=220) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=268) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=220, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=268): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=221) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=269) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=221, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=269): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=222) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=270) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=222, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:42[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:42[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=271) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=271): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=270): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=223) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=272) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=223, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=272): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=224) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=273) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=224, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=273): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=225) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=274) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=225, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=274): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=226) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=275) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=226, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=275): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=227) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=276) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=227, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=276): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=228) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=277) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=228, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:45[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:45[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=278) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=278): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=277): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=229) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=279) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=229, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=279): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=230) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=280) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=230, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=280): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=231) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=281) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=231, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=281): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=232) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=282) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=232, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=282): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=233) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=283) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=233, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:48[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:48[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=284) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=284): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=283): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=234) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=285) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=234, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=285): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=235) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=286) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=235, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=286): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=236) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=287) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=236, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [DispatcherServlet:119] - GET "/kafka/test/message?message=%3E%3E%3E%3E%3E%3E%3E%3E%3E%3Ewelcome", parameters={masked}
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [RequestMappingHandlerMapping:522] - Mapped to com.example.kafka.controller.KafkaController#sendMessage(String)
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [OpenEntityManagerInViewInterceptor:86] - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
INFO  22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [ProducerConfig:376] - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [192.168.111.128:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

INFO  22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [KafkaProducer:572] - [Producer clientId=producer-1] Instantiated an idempotent producer.
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [Sender:238] - [Producer clientId=producer-1] Starting Kafka producer I/O thread.
INFO  22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [AppInfoParser:119] - Kafka version: 3.1.2
INFO  22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [AppInfoParser:120] - Kafka commitId: f8c67dc3ae0a3265
INFO  22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [AppInfoParser:121] - Kafka startTimeMs: 1670561029709
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [TransactionManager:1103] - [Producer clientId=producer-1] Transition from state UNINITIALIZED to INITIALIZING
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [KafkaProducer:437] - [Producer clientId=producer-1] Kafka producer started
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [DefaultKafkaProducerFactory:313] - Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@2530f21a]
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [TransactionManager:1143] - [Producer clientId=producer-1] Enqueuing transactional request InitProducerIdRequestData(transactionalId=null, transactionTimeoutMs=2147483647, producerId=-1, producerEpoch=-1)
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:1160] - [Producer clientId=producer-1] Initialize connection to node 192.168.111.128:9092 (id: -1 rack: null) for sending metadata request
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [ClientUtils:113] - Resolved host 192.168.111.128 as 192.168.111.128
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:989] - [Producer clientId=producer-1] Initiating connection to node 192.168.111.128:9092 (id: -1 rack: null) using address /192.168.111.128
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [Selector:531] - [Producer clientId=producer-1] Created socket with SO_RCVBUF = 32768, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node -1
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:951] - [Producer clientId=producer-1] Completed connection to node -1. Fetching API versions.
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:965] - [Producer clientId=producer-1] Initiating API versions fetch from node -1.
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:521] - [Producer clientId=producer-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=0) and timeout 30000 to node -1: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.1.2')
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:879] - [Producer clientId=producer-1] Received API_VERSIONS response from node -1 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=0): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=13), ApiVersion(apiKey=2, minVersion=0, maxVersion=7), ApiVersion(apiKey=3, minVersion=0, maxVersion=12), ApiVersion(apiKey=4, minVersion=0, maxVersion=6), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=8), ApiVersion(apiKey=10, minVersion=0, maxVersion=4), ApiVersion(apiKey=11, minVersion=0, maxVersion=9), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=5), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=3), ApiVersion(apiKey=30, minVersion=0, maxVersion=3), ApiVersion(apiKey=31, minVersion=0, maxVersion=3), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=4), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=3), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=3), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=2), ApiVersion(apiKey=57, minVersion=0, maxVersion=1), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0), ApiVersion(apiKey=65, minVersion=0, maxVersion=0), ApiVersion(apiKey=66, minVersion=0, maxVersion=0), ApiVersion(apiKey=67, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:921] - [Producer clientId=producer-1] Node -1 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 13 [usable: 13], ListOffsets(2): 0 to 7 [usable: 7], Metadata(3): 0 to 12 [usable: 12], LeaderAndIsr(4): 0 to 6 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 8 [usable: 8], FindCoordinator(10): 0 to 4 [usable: 4], JoinGroup(11): 0 to 9 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 5 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 3 [usable: 2], CreateAcls(30): 0 to 3 [usable: 2], DeleteAcls(31): 0 to 3 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 4 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 3 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 3 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 to 2 [usable: 0], UpdateFeatures(57): 0 to 1 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0], DescribeTransactions(65): 0 [usable: 0], ListTransactions(66): 0 [usable: 0], AllocateProducerIds(67): 0 [usable: 0]).
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:1143] - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 192.168.111.128:9092 (id: -1 rack: null)
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:521] - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=12, clientId=producer-1, correlationId=1) and timeout 30000 to node -1: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [Sender:469] - [Producer clientId=producer-1] Sending transactional request InitProducerIdRequestData(transactionalId=null, transactionTimeoutMs=2147483647, producerId=-1, producerEpoch=-1) to node 192.168.111.128:9092 (id: -1 rack: null) with correlation ID 2
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:521] - [Producer clientId=producer-1] Sending INIT_PRODUCER_ID request with header RequestHeader(apiKey=INIT_PRODUCER_ID, apiVersion=4, clientId=producer-1, correlationId=2) and timeout 30000 to node -1: InitProducerIdRequestData(transactionalId=null, transactionTimeoutMs=2147483647, producerId=-1, producerEpoch=-1)
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:879] - [Producer clientId=producer-1] Received METADATA response from node -1 for request with header RequestHeader(apiKey=METADATA, apiVersion=12, clientId=producer-1, correlationId=1): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='192.168.111.128', port=9092, rack=null)], clusterId='ctFtvzn_QjacTeFypCnKVw', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=GsIna2TrQ6GXdWjajJ1NkQ, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=0, leaderEpoch=0, replicaNodes=[0], isrNodes=[0], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
INFO  22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [Metadata:402] - [Producer clientId=producer-1] Resetting the last seen epoch of partition test-0 to 0 since the associated topicId changed from null to GsIna2TrQ6GXdWjajJ1NkQ
INFO  22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [Metadata:287] - [Producer clientId=producer-1] Cluster ID: ctFtvzn_QjacTeFypCnKVw
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [Metadata:291] - [Producer clientId=producer-1] Updated cluster metadata updateVersion 2 to MetadataCache{clusterId='ctFtvzn_QjacTeFypCnKVw', nodes={0=192.168.111.128:9092 (id: 0 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[0], leaderEpoch=Optional[0], replicas=0, isr=0, offlineReplicas=)], controller=192.168.111.128:9092 (id: 0 rack: null)}
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [RequestResponseBodyMethodProcessor:268] - Using 'text/html', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8] and supported [text/plain, */*, text/plain, */*, application/json, application/*+json, application/json, application/*+json]
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [RequestResponseBodyMethodProcessor:119] - Writing ["success"]
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [OpenEntityManagerInViewInterceptor:111] - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 22-12-09 13:43:49[https-jsse-nio-8443-exec-6] [DispatcherServlet:1131] - Completed 200 OK
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:879] - [Producer clientId=producer-1] Received INIT_PRODUCER_ID response from node -1 for request with header RequestHeader(apiKey=INIT_PRODUCER_ID, apiVersion=4, clientId=producer-1, correlationId=2): InitProducerIdResponseData(throttleTimeMs=0, errorCode=0, producerId=0, producerEpoch=0)
INFO  22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [TransactionManager:554] - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [TransactionManager:1103] - [Producer clientId=producer-1] Transition from state INITIALIZING to READY
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [ClientUtils:113] - Resolved host 192.168.111.128 as 192.168.111.128
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:989] - [Producer clientId=producer-1] Initiating connection to node 192.168.111.128:9092 (id: 0 rack: null) using address /192.168.111.128
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [Selector:531] - [Producer clientId=producer-1] Created socket with SO_RCVBUF = 32768, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 0
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:951] - [Producer clientId=producer-1] Completed connection to node 0. Fetching API versions.
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:965] - [Producer clientId=producer-1] Initiating API versions fetch from node 0.
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:521] - [Producer clientId=producer-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=3) and timeout 30000 to node 0: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.1.2')
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:879] - [Producer clientId=producer-1] Received API_VERSIONS response from node 0 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=3): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=13), ApiVersion(apiKey=2, minVersion=0, maxVersion=7), ApiVersion(apiKey=3, minVersion=0, maxVersion=12), ApiVersion(apiKey=4, minVersion=0, maxVersion=6), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=8), ApiVersion(apiKey=10, minVersion=0, maxVersion=4), ApiVersion(apiKey=11, minVersion=0, maxVersion=9), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=5), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=3), ApiVersion(apiKey=30, minVersion=0, maxVersion=3), ApiVersion(apiKey=31, minVersion=0, maxVersion=3), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=4), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=3), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=3), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=2), ApiVersion(apiKey=57, minVersion=0, maxVersion=1), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0), ApiVersion(apiKey=65, minVersion=0, maxVersion=0), ApiVersion(apiKey=66, minVersion=0, maxVersion=0), ApiVersion(apiKey=67, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:921] - [Producer clientId=producer-1] Node 0 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 13 [usable: 13], ListOffsets(2): 0 to 7 [usable: 7], Metadata(3): 0 to 12 [usable: 12], LeaderAndIsr(4): 0 to 6 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 8 [usable: 8], FindCoordinator(10): 0 to 4 [usable: 4], JoinGroup(11): 0 to 9 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 5 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 3 [usable: 2], CreateAcls(30): 0 to 3 [usable: 2], DeleteAcls(31): 0 to 3 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 4 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 3 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 3 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 to 2 [usable: 0], UpdateFeatures(57): 0 to 1 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0], DescribeTransactions(65): 0 [usable: 0], ListTransactions(66): 0 [usable: 0], AllocateProducerIds(67): 0 [usable: 0]).
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [TransactionManager:545] - [Producer clientId=producer-1] ProducerId of partition test-0 set to 0 with epoch 0. Reinitialize sequence at beginning.
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [RecordAccumulator:603] - [Producer clientId=producer-1] Assigned producerId 0 and producerEpoch 0 to batch with base sequence 0 being sent to partition test-0
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:521] - [Producer clientId=producer-1] Sending PRODUCE request with header RequestHeader(apiKey=PRODUCE, apiVersion=9, clientId=producer-1, correlationId=4) and timeout 30000 to node 0: {acks=-1,timeout=30000,partitionSizes=[test-0=85]}
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=287): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=237) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=288) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=237, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [NetworkClient:879] - [Producer clientId=producer-1] Received PRODUCE response from node 0 for request with header RequestHeader(apiKey=PRODUCE, apiVersion=9, clientId=producer-1, correlationId=4): ProduceResponseData(responses=[TopicProduceResponse(name='test', partitionResponses=[PartitionProduceResponse(index=0, errorCode=0, baseOffset=0, logAppendTimeMs=-1, logStartOffset=0, recordErrors=[], errorMessage=null)])], throttleTimeMs=0)
DEBUG 22-12-09 13:43:49[kafka-producer-network-thread | producer-1] [TransactionManager:715] - [Producer clientId=producer-1] ProducerId: 0; Set last ack'd sequence number for topic-partition test-0 to 0
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=288): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[FetchableTopicResponse(topic='', topicId=GsIna2TrQ6GXdWjajJ1NkQ, partitions=[PartitionData(partitionIndex=0, errorCode=0, highWatermark=1, lastStableOffset=1, logStartOffset=0, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, records=MemoryRecords(size=85, buffer=java.nio.HeapByteBuffer[pos=0 lim=85 cap=88]))])])
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 1 response partition(s)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:326] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Fetch READ_UNCOMMITTED at offset 0 for partition test-0 returned fetch data PartitionData(partitionIndex=0, errorCode=0, highWatermark=1, lastStableOffset=1, logStartOffset=0, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, records=MemoryRecords(size=85, buffer=java.nio.HeapByteBuffer[pos=0 lim=85 cap=88]))
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=238) for node 0. Added 0 partition(s), altered 1 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(test-0), toForget=(), toReplace=(), implied=(), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=289) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=238, topics=[FetchTopic(topic='test', topicId=GsIna2TrQ6GXdWjajJ1NkQ, partitions=[FetchPartition(partition=0, currentLeaderEpoch=0, fetchOffset=1, lastFetchedEpoch=-1, logStartOffset=-1, partitionMaxBytes=1048576)])], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 1 records
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [RecordMessagingMessageListenerAdapter:191] - Processing [GenericMessage [payload=>>>>>>>>>>welcome, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7b190cbb, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=test, kafka_receivedTimestamp=1670561029722, kafka_groupId=testgroup}]]
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {test-0=OffsetAndMetadata{offset=1, leaderEpoch=null, metadata=''}}
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Committing: {test-0=OffsetAndMetadata{offset=1, leaderEpoch=null, metadata=''}}
DEBUG 22-12-09 13:43:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending OFFSET_COMMIT request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-testgroup-1, correlationId=290) and timeout 30000 to node 2147483647: OffsetCommitRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='test', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=1, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='')])])
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received OFFSET_COMMIT response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-testgroup-1, correlationId=290): OffsetCommitResponseData(throttleTimeMs=0, topics=[OffsetCommitResponseTopic(name='test', partitions=[OffsetCommitResponsePartition(partitionIndex=0, errorCode=0)])])
DEBUG 22-12-09 13:43:50[quartzScheduler_Worker-3] [JobRunShell:201] - Calling execute on job DEFAULT.6da64b5bd2ee-27c4b244-14f4-450f-962a-8378702cc8ab
DEBUG 22-12-09 13:43:50[quartzScheduler_QuartzSchedulerThread] [QuartzSchedulerThread:291] - batch acquisition of 1 triggers
INFO  22-12-09 13:43:50[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1226] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Committed offset 1 for partition test-0
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=289): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=239) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=291) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=239, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=291): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=240) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=292) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=240, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:51[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:51[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=293) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=293): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=292): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=241) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=294) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=241, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=294): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=242) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=295) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=242, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=295): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=243) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=296) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=243, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=296): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=244) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=297) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=244, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=297): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=245) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=298) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=245, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=298): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=246) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=299) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=246, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:54[kafka-coordinator-heartbeat-thread | testgroup] [ConsumerCoordinator:1106] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending Heartbeat request with generation 1 and member id consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34 to coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
DEBUG 22-12-09 13:43:54[kafka-coordinator-heartbeat-thread | testgroup] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=300) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='testgroup', generationId=1, memberId='consumer-testgroup-1-0b99c3ad-f58f-4ee6-a4b0-e5cf20745e34', groupInstanceId=null)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-testgroup-1, correlationId=300): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1129] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received successful Heartbeat response
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=299): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=247) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=301) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=247, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Received: 0 records
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:313] - Commit list: {}
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=301): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=248) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=302) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=248, topics=[], forgottenTopicsData=[], rackId='')
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:879] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Received FETCH response from node 0 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=302): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1857037461, responses=[])
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:584] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node 0 sent an incremental fetch response with throttleTimeMs = 0 for session 1857037461 with 0 response partition(s), 1 implied partition(s)
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:1245] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}} to node 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:351] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Built incremental fetch (sessionId=1857037461, epoch=249) for node 0. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Fetcher:274] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(test-0), canUseTopicIds=True) to broker 192.168.111.128:9092 (id: 0 rack: null)
DEBUG 22-12-09 13:43:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:521] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-testgroup-1, correlationId=303) and timeout 30000 to node 0: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1857037461, sessionEpoch=249, topics=[], forgottenTopicsData=[], rackId='')
INFO  22-12-09 13:54:29[restartedMain] [HelloWorldSpringBootApplication:55] - Starting HelloWorldSpringBootApplication using Java 17.0.3 on 황수연 with PID 16968 (C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main started by user in C:\Users\user\IdeaProjects\HelloWorld-SpringBoot)
INFO  22-12-09 13:54:29[restartedMain] [HelloWorldSpringBootApplication:640] - The following 1 profile is active: "local"
INFO  22-12-09 13:54:29[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  22-12-09 13:54:29[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  22-12-09 13:54:30[restartedMain] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  22-12-09 13:54:30[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  22-12-09 13:54:30[restartedMain] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.database.repository.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  22-12-09 13:54:30[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 45 ms. Found 0 JDBC repository interfaces.
INFO  22-12-09 13:54:30[restartedMain] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  22-12-09 13:54:30[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-12-09 13:54:30[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 39 ms. Found 1 JPA repository interfaces.
INFO  22-12-09 13:54:31[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:40] - Post-processing PropertySource instances
INFO  22-12-09 13:54:31[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  22-12-09 13:54:31[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:54:31[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:54:31[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:54:31[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  22-12-09 13:54:31[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  22-12-09 13:54:31[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:54:31[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:54:31[restartedMain] [DefaultLazyPropertyFilter:31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  22-12-09 13:54:31[restartedMain] [DefaultLazyPropertyResolver:35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  22-12-09 13:54:31[restartedMain] [DefaultLazyPropertyDetector:35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  22-12-09 13:54:32[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8443 (https) 8009 (http) 8080 (http)
INFO  22-12-09 13:54:32[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["https-jsse-nio-8443"]
INFO  22-12-09 13:54:32[restartedMain] [AjpNioProtocol:173] - Initializing ProtocolHandler ["ajp-nio-0.0.0.0-8009"]
INFO  22-12-09 13:54:32[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-12-09 13:54:32[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-12-09 13:54:32[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
INFO  22-12-09 13:54:32[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  22-12-09 13:54:32[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-12-09 13:54:32[restartedMain] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 3419 ms
INFO  22-12-09 13:54:32[restartedMain] [DefaultLazyEncryptor:32] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@15e8d6ae with name: jasyptStringEncryptor
INFO  22-12-09 13:54:32[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-12-09 13:54:33[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-12-09 13:54:33[restartedMain] [H2ConsoleAutoConfiguration:98] - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
INFO  22-12-09 13:54:33[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-12-09 13:54:33[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.6.12.Final
INFO  22-12-09 13:54:34[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  22-12-09 13:54:34[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG 22-12-09 13:54:35[restartedMain] [SQL:144] - 
    
    drop table if exists member CASCADE 
DEBUG 22-12-09 13:54:35[restartedMain] [SQL:144] - 
    
    create table member (
       mbr_no bigint generated by default as identity,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    )
INFO  22-12-09 13:54:35[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-12-09 13:54:35[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-12-09 13:54:35[Thread-5] [PlatformDependent:101] - Your platform does not provide complete low-level API for accessing direct buffers reliably. Unless explicitly requested, heap buffer will always be preferred to avoid potential system unstability.
INFO  22-12-09 13:54:35[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  22-12-09 13:54:35[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  22-12-09 13:54:35[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  22-12-09 13:54:35[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  22-12-09 13:54:35[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  22-12-09 13:54:35[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  22-12-09 13:54:35[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  22-12-09 13:54:35[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3d4cb556
WARN  22-12-09 13:54:36[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-12-09 13:54:36[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-12-09 13:54:36[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  22-12-09 13:54:37[restartedMain] [ConsumerConfig:376] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [192.168.111.128:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-testgroup-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = testgroup
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  22-12-09 13:54:37[restartedMain] [AppInfoParser:119] - Kafka version: 3.1.2
INFO  22-12-09 13:54:37[restartedMain] [AppInfoParser:120] - Kafka commitId: f8c67dc3ae0a3265
INFO  22-12-09 13:54:37[restartedMain] [AppInfoParser:121] - Kafka startTimeMs: 1670561677208
INFO  22-12-09 13:54:37[restartedMain] [KafkaConsumer:966] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Subscribed to topic(s): test
INFO  22-12-09 13:54:37[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["https-jsse-nio-8443"]
INFO  22-12-09 13:54:37[restartedMain] [AjpNioProtocol:173] - Starting ProtocolHandler ["ajp-nio-0.0.0.0-8009"]
INFO  22-12-09 13:54:37[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-12-09 13:54:37[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8443 (https) 8009 (http) 8080 (http) with context path ''
INFO  22-12-09 13:54:37[restartedMain] [RefreshScopeRefreshedEventListener:47] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  22-12-09 13:54:37[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source systemProperties refreshed
INFO  22-12-09 13:54:37[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source systemEnvironment refreshed
INFO  22-12-09 13:54:37[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source random refreshed
INFO  22-12-09 13:54:37[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' refreshed
INFO  22-12-09 13:54:37[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source devtools refreshed
INFO  22-12-09 13:54:37[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource server.ports [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:54:37[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  22-12-09 13:54:37[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:54:37[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  22-12-09 13:54:37[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  22-12-09 13:54:37[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  22-12-09 13:54:37[restartedMain] [HelloWorldSpringBootApplication:61] - Started HelloWorldSpringBootApplication in 9.036 seconds (JVM running for 9.619)
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:402] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Resetting the last seen epoch of partition test-0 to 0 since the associated topicId changed from null to GsIna2TrQ6GXdWjajJ1NkQ
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:287] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Cluster ID: ctFtvzn_QjacTeFypCnKVw
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:853] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Discovered group coordinator 192.168.111.128:9092 (id: 2147483647 rack: null)
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:535] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] (Re-)joining group
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:1000] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Request joining group due to: need to re-join with the given member-id
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:535] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] (Re-)joining group
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:595] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Successfully joined group with generation Generation{generationId=3, memberId='consumer-testgroup-1-a75da094-37c8-4204-81a3-69076468330c', protocol='range'}
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:659] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Finished assignment for group at generation 3: {consumer-testgroup-1-a75da094-37c8-4204-81a3-69076468330c=Assignment(partitions=[test-0])}
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:761] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Successfully synced group in generation Generation{generationId=3, memberId='consumer-testgroup-1-a75da094-37c8-4204-81a3-69076468330c', protocol='range'}
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:280] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Notifying assignor about the new Assignment(partitions=[test-0])
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:292] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Adding newly assigned partitions: test-0
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:851] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Setting offset for partition test-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.111.128:9092 (id: 0 rack: null)], epoch=0}}
INFO  22-12-09 13:54:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - testgroup: partitions assigned: [test-0]
INFO  22-12-09 13:54:40[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:54:50[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:54:55[https-jsse-nio-8443-exec-4] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-12-09 13:54:55[https-jsse-nio-8443-exec-4] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-12-09 13:54:55[https-jsse-nio-8443-exec-4] [DispatcherServlet:547] - Completed initialization in 2 ms
INFO  22-12-09 13:54:55[https-jsse-nio-8443-exec-4] [ProducerConfig:376] - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [192.168.111.128:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

INFO  22-12-09 13:54:55[https-jsse-nio-8443-exec-4] [KafkaProducer:572] - [Producer clientId=producer-1] Instantiated an idempotent producer.
INFO  22-12-09 13:54:55[https-jsse-nio-8443-exec-4] [AppInfoParser:119] - Kafka version: 3.1.2
INFO  22-12-09 13:54:55[https-jsse-nio-8443-exec-4] [AppInfoParser:120] - Kafka commitId: f8c67dc3ae0a3265
INFO  22-12-09 13:54:55[https-jsse-nio-8443-exec-4] [AppInfoParser:121] - Kafka startTimeMs: 1670561695768
INFO  22-12-09 13:54:55[kafka-producer-network-thread | producer-1] [Metadata:402] - [Producer clientId=producer-1] Resetting the last seen epoch of partition test-0 to 0 since the associated topicId changed from null to GsIna2TrQ6GXdWjajJ1NkQ
INFO  22-12-09 13:54:55[kafka-producer-network-thread | producer-1] [Metadata:287] - [Producer clientId=producer-1] Cluster ID: ctFtvzn_QjacTeFypCnKVw
INFO  22-12-09 13:54:55[kafka-producer-network-thread | producer-1] [TransactionManager:554] - [Producer clientId=producer-1] ProducerId set to 1 with epoch 0
INFO  22-12-09 13:55:00[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:55:10[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:55:20[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:55:30[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:55:40[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:56:42[restartedMain] [HelloWorldSpringBootApplication:55] - Starting HelloWorldSpringBootApplication using Java 17.0.3 on 황수연 with PID 15432 (C:\Users\user\IdeaProjects\HelloWorld-SpringBoot\build\classes\java\main started by user in C:\Users\user\IdeaProjects\HelloWorld-SpringBoot)
INFO  22-12-09 13:56:42[restartedMain] [HelloWorldSpringBootApplication:640] - The following 1 profile is active: "local"
INFO  22-12-09 13:56:42[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  22-12-09 13:56:42[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  22-12-09 13:56:43[restartedMain] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  22-12-09 13:56:43[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  22-12-09 13:56:43[restartedMain] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.database.repository.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  22-12-09 13:56:43[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 57 ms. Found 0 JDBC repository interfaces.
INFO  22-12-09 13:56:43[restartedMain] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  22-12-09 13:56:43[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-12-09 13:56:43[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 1 JPA repository interfaces.
INFO  22-12-09 13:56:44[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:40] - Post-processing PropertySource instances
INFO  22-12-09 13:56:44[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  22-12-09 13:56:44[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:56:44[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:56:44[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:56:44[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  22-12-09 13:56:44[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  22-12-09 13:56:44[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:56:44[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:56:44[restartedMain] [DefaultLazyPropertyFilter:31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  22-12-09 13:56:44[restartedMain] [DefaultLazyPropertyResolver:35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  22-12-09 13:56:44[restartedMain] [DefaultLazyPropertyDetector:35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  22-12-09 13:56:45[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8443 (https) 8009 (http) 8080 (http)
INFO  22-12-09 13:56:45[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["https-jsse-nio-8443"]
INFO  22-12-09 13:56:45[restartedMain] [AjpNioProtocol:173] - Initializing ProtocolHandler ["ajp-nio-0.0.0.0-8009"]
INFO  22-12-09 13:56:45[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-12-09 13:56:45[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-12-09 13:56:45[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
INFO  22-12-09 13:56:45[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  22-12-09 13:56:45[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-12-09 13:56:45[restartedMain] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 3096 ms
INFO  22-12-09 13:56:45[restartedMain] [DefaultLazyEncryptor:32] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@15e8d6ae with name: jasyptStringEncryptor
INFO  22-12-09 13:56:45[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-12-09 13:56:45[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-12-09 13:56:45[restartedMain] [H2ConsoleAutoConfiguration:98] - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
INFO  22-12-09 13:56:46[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-12-09 13:56:46[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.6.12.Final
INFO  22-12-09 13:56:46[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  22-12-09 13:56:46[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG 22-12-09 13:56:47[restartedMain] [SQL:144] - 
    
    drop table if exists member CASCADE 
DEBUG 22-12-09 13:56:47[restartedMain] [SQL:144] - 
    
    create table member (
       mbr_no bigint generated by default as identity,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    )
INFO  22-12-09 13:56:47[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-12-09 13:56:47[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-12-09 13:56:47[Thread-5] [PlatformDependent:101] - Your platform does not provide complete low-level API for accessing direct buffers reliably. Unless explicitly requested, heap buffer will always be preferred to avoid potential system unstability.
INFO  22-12-09 13:56:47[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  22-12-09 13:56:47[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  22-12-09 13:56:47[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  22-12-09 13:56:47[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  22-12-09 13:56:47[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  22-12-09 13:56:47[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  22-12-09 13:56:47[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  22-12-09 13:56:47[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3d4cb556
WARN  22-12-09 13:56:48[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-12-09 13:56:48[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-12-09 13:56:48[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  22-12-09 13:56:49[restartedMain] [ConsumerConfig:376] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [192.168.111.128:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-testgroup-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = testgroup
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  22-12-09 13:56:49[restartedMain] [AppInfoParser:119] - Kafka version: 3.1.2
INFO  22-12-09 13:56:49[restartedMain] [AppInfoParser:120] - Kafka commitId: f8c67dc3ae0a3265
INFO  22-12-09 13:56:49[restartedMain] [AppInfoParser:121] - Kafka startTimeMs: 1670561809485
INFO  22-12-09 13:56:49[restartedMain] [KafkaConsumer:966] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Subscribed to topic(s): test
INFO  22-12-09 13:56:49[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["https-jsse-nio-8443"]
INFO  22-12-09 13:56:49[restartedMain] [AjpNioProtocol:173] - Starting ProtocolHandler ["ajp-nio-0.0.0.0-8009"]
INFO  22-12-09 13:56:49[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-12-09 13:56:49[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8443 (https) 8009 (http) 8080 (http) with context path ''
INFO  22-12-09 13:56:49[restartedMain] [RefreshScopeRefreshedEventListener:47] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  22-12-09 13:56:49[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source systemProperties refreshed
INFO  22-12-09 13:56:49[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source systemEnvironment refreshed
INFO  22-12-09 13:56:49[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source random refreshed
INFO  22-12-09 13:56:49[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' refreshed
INFO  22-12-09 13:56:49[restartedMain] [CachingDelegateEncryptablePropertySource:55] - Property Source devtools refreshed
INFO  22-12-09 13:56:49[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource server.ports [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  22-12-09 13:56:49[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  22-12-09 13:56:49[restartedMain] [EncryptablePropertySourceConverter:76] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  22-12-09 13:56:49[restartedMain] [EncryptablePropertySourceConverter:81] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  22-12-09 13:56:49[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  22-12-09 13:56:49[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  22-12-09 13:56:49[restartedMain] [HelloWorldSpringBootApplication:61] - Started HelloWorldSpringBootApplication in 8.19 seconds (JVM running for 8.667)
INFO  22-12-09 13:56:50[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:56:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:56:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:56:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:56:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:56:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:56:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:56:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:56:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:56:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:56:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:56:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:56:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:00[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:57:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:10[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:57:11[https-jsse-nio-8443-exec-3] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-12-09 13:57:11[https-jsse-nio-8443-exec-3] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-12-09 13:57:11[https-jsse-nio-8443-exec-3] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  22-12-09 13:57:11[https-jsse-nio-8443-exec-3] [ProducerConfig:376] - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [192.168.111.128:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

INFO  22-12-09 13:57:11[https-jsse-nio-8443-exec-3] [KafkaProducer:572] - [Producer clientId=producer-1] Instantiated an idempotent producer.
INFO  22-12-09 13:57:11[https-jsse-nio-8443-exec-3] [AppInfoParser:119] - Kafka version: 3.1.2
INFO  22-12-09 13:57:11[https-jsse-nio-8443-exec-3] [AppInfoParser:120] - Kafka commitId: f8c67dc3ae0a3265
INFO  22-12-09 13:57:11[https-jsse-nio-8443-exec-3] [AppInfoParser:121] - Kafka startTimeMs: 1670561831525
INFO  22-12-09 13:57:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:13[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:13[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:13[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:15[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:15[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:15[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:17[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:17[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:17[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:20[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:57:20[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:20[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:20[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:22[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:22[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:22[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:25[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:25[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:25[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:28[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:28[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:28[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:30[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:57:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:31[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:31[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:31[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:34[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:34[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:34[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:37[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:37[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:37[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:40[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:57:40[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:40[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:40[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:43[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:43[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:43[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:46[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:46[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:46[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:49[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:49[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:49[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:50[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:57:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:52[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:52[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:52[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:55[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:55[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:55[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:57:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:57:58[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:57:58[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:57:58[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:00[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:58:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:01[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:01[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:01[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:04[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:04[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:04[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:07[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:07[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:07[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:10[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:58:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:10[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:10[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:10[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
ERROR 22-12-09 13:58:11[https-jsse-nio-8443-exec-3] [LoggingProducerListener:261] - Exception thrown when sending a message with key='null' and payload='>>>>>>>>>>welcome' to topic test:
org.apache.kafka.common.errors.TimeoutException: Topic test not present in metadata after 60000 ms.
WARN  22-12-09 13:58:11[https-jsse-nio-8443-exec-3] [ExceptionHandlerExceptionResolver:208] - Resolved [org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic test not present in metadata after 60000 ms.]
INFO  22-12-09 13:58:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:13[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:13[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:13[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:16[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:16[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:16[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:19[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:19[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:19[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:20[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:58:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:22[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:22[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:22[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:25[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:25[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:25[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:28[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:28[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:28[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:30[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:58:31[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:31[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:31[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:34[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:34[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:34[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:37[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:37[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:37[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:40[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:58:40[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:40[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:40[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:43[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:43[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:43[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:46[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:46[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:46[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:49[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:49[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:49[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:50[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:58:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:52[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:52[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:52[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
ERROR 22-12-09 13:58:53[https-jsse-nio-8443-exec-9] [LoggingProducerListener:261] - Exception thrown when sending a message with key='null' and payload='>>>>>>>>>>welcome' to topic test:
org.apache.kafka.common.errors.TimeoutException: Topic test not present in metadata after 60000 ms.
WARN  22-12-09 13:58:53[https-jsse-nio-8443-exec-9] [ExceptionHandlerExceptionResolver:208] - Resolved [org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic test not present in metadata after 60000 ms.]
INFO  22-12-09 13:58:55[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:55[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:55[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:58[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:58:58[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:58[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:58:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:58:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:58:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:00[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:59:01[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:01[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:01[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:04[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:04[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:04[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:07[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:07[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:07[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:10[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:59:10[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:10[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:10[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:13[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:13[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:13[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:16[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:16[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:16[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:19[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:19[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:19[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:20[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:59:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:22[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:22[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:22[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:25[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:25[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:25[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:28[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:28[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:28[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:30[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:59:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:31[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:31[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:31[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:34[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:34[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:34[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:37[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:37[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:37[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:40[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:59:41[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:41[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:41[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:43[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:43[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:43[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:47[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:47[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:47[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:50[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 13:59:50[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:50[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:50[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:53[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:53[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:53[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:56[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:56[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:56[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:59[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 13:59:59[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:59[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 13:59:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 13:59:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 13:59:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:00[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:00:02[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:02[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:02[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:05[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:05[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:05[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:08[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:08[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:08[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:10[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:00:11[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:11[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:11[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:14[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:14[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:14[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:17[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:17[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:17[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:20[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:00:20[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:20[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:20[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:24[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:24[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:24[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:26[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:26[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:26[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:30[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:00:30[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:30[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:30[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:33[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:33[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:33[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:35[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:35[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:35[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:39[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:39[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:39[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:40[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:00:42[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:42[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:42[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:45[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:45[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:45[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:48[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:48[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:48[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:48[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:50[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:00:51[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:51[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:51[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:51[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:54[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:54[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:54[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:57[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:00:57[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:57[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:00:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:00:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:00:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:00[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:01:00[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:00[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:00[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:03[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:03[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:03[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:06[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:06[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:06[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:09[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:09[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:09[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:10[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:01:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:12[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:12[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:12[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:15[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:15[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:15[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:18[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:18[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:18[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:20[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:01:21[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:21[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:21[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:24[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:24[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:24[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:27[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:27[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:27[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:30[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:01:30[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:30[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:30[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:33[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:33[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:33[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:36[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:36[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:36[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:39[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:39[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:39[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:40[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:01:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:42[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:42[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:42[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:45[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:45[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:45[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:48[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:48[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:48[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:50[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:01:51[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:51[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:51[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:54[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:54[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:54[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:57[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:01:57[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:57[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:01:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:01:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:01:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:00[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:02:00[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:00[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:00[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:03[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:03[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:03[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:06[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:06[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:06[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:09[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:09[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:09[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:10[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:02:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:12[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:12[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:12[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:15[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:15[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:15[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:18[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:18[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:18[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:20[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:02:21[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:21[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:21[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:24[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:24[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:24[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:27[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:27[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:27[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:30[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:02:30[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:30[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:30[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:33[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:33[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:33[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:36[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:36[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:36[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:39[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:39[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:39[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:40[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:02:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:42[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:42[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:42[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:45[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:45[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:45[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:48[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:48[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:48[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:50[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:02:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:51[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:51[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:51[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:54[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:54[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:54[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:58[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:02:58[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:58[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:02:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:02:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:02:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:00[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:03:01[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:01[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:01[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:03[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:03[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:03[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:06[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:06[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:06[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:09[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:09[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:09[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:10[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:12[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:12[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:12[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:15[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:15[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:15[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:18[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:18[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:18[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:20[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:03:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:21[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:21[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:21[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:24[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:24[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:24[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:27[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:27[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:27[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:30[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:03:30[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:30[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:30[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:34[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:34[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:34[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:36[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:36[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:36[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:39[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:39[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:39[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:40[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:03:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:42[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:42[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:42[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:45[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:45[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:45[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:48[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:48[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:48[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:50[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:03:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:51[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:51[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:51[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:54[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:54[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:54[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:57[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:03:57[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:57[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:03:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:03:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:03:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:00[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:04:00[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:00[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:00[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:03[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:03[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:03[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:06[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:06[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:06[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:09[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:09[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:09[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:10[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:04:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:12[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:12[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:12[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:15[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:15[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:15[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:18[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:18[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:18[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:20[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:04:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:21[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:21[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:21[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:25[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:25[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:25[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:26[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:28[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:28[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:28[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:30[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:04:31[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:31[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:31[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:34[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:34[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:34[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:37[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:37[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:37[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:40[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:04:40[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:40[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:40[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:43[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:43[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:43[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:46[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:46[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:46[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:49[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:49[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:49[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:50[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:04:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:52[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:52[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:52[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:55[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:55[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:55[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:59[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:04:59[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:59[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:04:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:04:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:04:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:00[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:05:02[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:02[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:02[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:05[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:05[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:05[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:08[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:08[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:08[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:10[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:05:11[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:11[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:11[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:14[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:14[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:14[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:17[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:17[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:17[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:20[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:05:20[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:20[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:20[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:23[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:23[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:23[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:26[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:26[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:26[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:29[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:29[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:29[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:30[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:05:32[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:32[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:32[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:35[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:35[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:35[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:38[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:38[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:38[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:40[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:05:41[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:41[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:41[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:44[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:44[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:44[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:47[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:47[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:47[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:50[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:05:50[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:50[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:50[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:53[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:53[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:53[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:56[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:56[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:56[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:05:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:05:59[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:05:59[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:05:59[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:00[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:06:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:02[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:02[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:02[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:05[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:05[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:05[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:09[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:09[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:09[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:10[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:06:11[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:11[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:11[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:15[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:15[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:15[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:18[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:18[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:18[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:20[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:06:21[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:21[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:21[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:24[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:24[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:24[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:27[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:27[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:27[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:30[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:06:30[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:30[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:30[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:33[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:33[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:33[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:36[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:36[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:36[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:39[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:39[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:39[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:40[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:06:42[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:42[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:42[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:45[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:45[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:45[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:48[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:48[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:48[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:50[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:06:51[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:51[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:51[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:54[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:54[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:54[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:57[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:06:57[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:57[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:06:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:06:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:06:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:00[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:07:00[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:00[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:00[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:03[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:03[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:03[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:06[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:06[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:06[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:09[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:09[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:09[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:10[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:13[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:13[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:13[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:16[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:16[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:16[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:19[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:19[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:19[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:20[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:07:22[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:22[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:22[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:25[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:25[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:25[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:28[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:28[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:28[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:30[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:07:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:31[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:31[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:31[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:34[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:34[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:34[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:38[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:38[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:38[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:40[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:07:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:41[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:41[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:41[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:44[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:44[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:44[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:47[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:47[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:47[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:50[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:07:50[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:50[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:50[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:53[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:53[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:53[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:56[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:56[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:56[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:07:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:07:59[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:07:59[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:07:59[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:00[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:08:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:02[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:02[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:02[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:05[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:05[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:05[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:08[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:08[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:08[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:10[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:08:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:11[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:11[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:11[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:14[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:14[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:14[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:17[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:17[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:17[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:19[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:20[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:08:21[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:21[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:21[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:24[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:24[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:24[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:27[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:27[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:27[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:30[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:08:30[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:30[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:30[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:33[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:33[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:33[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:36[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:36[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:36[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:39[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:39[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:39[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:40[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:08:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:42[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:42[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:42[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:45[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:45[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:45[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:48[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:48[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:48[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:50[quartzScheduler_Worker-3] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:08:51[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:51[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:51[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:54[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:54[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:54[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:57[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:08:57[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:57[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:08:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:08:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:08:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:00[quartzScheduler_Worker-4] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:09:00[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:00[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:00[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:03[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:03[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:03[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:06[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:06[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:06[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:09[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:09[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:09[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:10[quartzScheduler_Worker-5] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:09:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:12[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:12[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:12[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:15[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:15[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:15[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:18[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:18[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:18[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:20[quartzScheduler_Worker-6] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:09:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:21[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:21[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:21[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:24[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:24[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:24[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:28[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:28[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:28[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:30[quartzScheduler_Worker-7] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:09:31[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:31[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:31[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:34[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:34[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:34[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:37[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:37[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:37[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:39[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:39[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:39[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:40[quartzScheduler_Worker-8] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:09:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:43[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:43[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:43[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:46[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:46[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:46[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:49[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:49[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:49[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:50[quartzScheduler_Worker-9] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:09:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:52[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:52[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:52[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:55[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:55[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:55[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:58[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:09:58[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:58[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:09:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:09:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:09:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:00[quartzScheduler_Worker-10] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:10:01[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:10:01[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:01[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:10:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:04[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:10:04[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:04[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:10:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:07[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:10:07[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:07[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:10:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:10[quartzScheduler_Worker-1] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:10:10[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:10:10[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:10[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:10:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:13[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:10:13[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:13[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:10:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:16[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:10:16[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:16[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:10:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:17[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:19[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:10:19[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:19[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:20[quartzScheduler_Worker-2] [TestJobA:16] - 10초마다 Job 실행
INFO  22-12-09 14:10:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:935] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Node -1 disconnected.
WARN  22-12-09 14:10:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:775] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [NetworkClient:1063] - [Consumer clientId=consumer-testgroup-1, groupId=testgroup] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
INFO  22-12-09 14:10:22[kafka-producer-network-thread | producer-1] [NetworkClient:935] - [Producer clientId=producer-1] Node -1 disconnected.
WARN  22-12-09 14:10:22[kafka-producer-network-thread | producer-1] [NetworkClient:775] - [Producer clientId=producer-1] Connection to node -1 (/192.168.111.128:9092) could not be established. Broker may not be available.
WARN  22-12-09 14:10:22[kafka-producer-network-thread | producer-1] [NetworkClient:1063] - [Producer clientId=producer-1] Bootstrap broker 192.168.111.128:9092 (id: -1 rack: null) disconnected
